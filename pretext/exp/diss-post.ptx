<?xml version="1.0"?>
<section xml:id="exp_experiment-1-2021">
  <title>Experiment 1 2021</title>
  <p>Thank you for participating in this experiment!  Please try to answer each
            question below to the best of your ability.  Start with the practice and then do the posttest problems 1 and 2.</p>
  <subsection xml:id="exp_practice">
    <title>Practice</title>
    <p>Try to solve the following mixed up code problems. You can use the <q>Help Me</q> button
                to make the problem easier if you have made at least three attempts to solve the
                problem.  After you solve each problem, please answer the poll as well.</p>
    <raw format="html" xml:space="preserve">
&lt;div class="runestone sqcontainer %(optclass)s"&gt;
&lt;div data-component="selectquestion" id=sum13_selq-p data-questionlist='sum13_nd_pp_exA, sum13_w6d_pp_exB'        data-ab=disPPEx1   data-limit-basecourse=true&gt;
    &lt;p&gt;Loading a dynamic question ...&lt;br/&gt;Selecting from: sum13_nd_pp_exA, sum13_w6d_pp_exB&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</raw>
    <exercise runestone="sum13_pp_poll-p"/>
    <raw format="html" xml:space="preserve">
&lt;div class="runestone sqcontainer %(optclass)s"&gt;
&lt;div data-component="selectquestion" id=list_mult_selq-p data-questionlist='list_multiples_pp_exA, list_multiples_w3d_pp_exB'        data-ab=disPPEx1   data-limit-basecourse=true&gt;
    &lt;p&gt;Loading a dynamic question ...&lt;br/&gt;Selecting from: list_multiples_pp_exA, list_multiples_w3d_pp_exB&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</raw>
    <exercise runestone="list_multiples_pp_poll-p"/>
    <raw format="html" xml:space="preserve">
&lt;div class="runestone sqcontainer %(optclass)s"&gt;
&lt;div data-component="selectquestion" id=ibeforee_selq-p data-questionlist='ibeforee_pp_exA, ibeforee_pp_wd_exB'        data-ab=disPPEx1   data-limit-basecourse=true&gt;
    &lt;p&gt;Loading a dynamic question ...&lt;br/&gt;Selecting from: ibeforee_pp_exA, ibeforee_pp_wd_exB&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</raw>
    <exercise runestone="ibeforee_pp_poll-p"/>
    <raw format="html" xml:space="preserve">
&lt;div class="runestone sqcontainer %(optclass)s"&gt;
&lt;div data-component="selectquestion" id=remove_target_selq-p data-questionlist='removetarget_pp_v2_exA, remove_target_pp_wd_exB'        data-ab=disPPEx1   data-limit-basecourse=true&gt;
    &lt;p&gt;Loading a dynamic question ...&lt;br/&gt;Selecting from: removetarget_pp_v2_exA, remove_target_pp_wd_exB&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</raw>
    <exercise runestone="removetarget_pp_v2_poll-p"/>
  </subsection>
  <subsection xml:id="exp_posttest-problem-1">
    <title>Posttest Problem 1</title>
    <p>Try to solve the following fix code problem.  You have five minutes to try to
                solve it.  It is okay if you can't solve it, you will earn credit for trying to
                solve it.</p>
    <p>Click on the <q>Start</q> button to show the problem.</p>
    <TimedNode line="101" runestone_options="{'timelimit': 5, 'subchapter': 'diss-post', 'chapter': 'exp', 'basecourse': 'py4e-int', 'optional': '', 'optclass': '', 'divid': 'post-exa-1-1', 'qnumber': '', 'question_label': '5'}" source="/home/david/comsc020/py4e-int/_sources/exp/diss-post.rst">
      <exercise label="removeExtras_fix_timed-p">
        <statement>
          <p>Fix the code below to remove all adjacent duplicate values in the passed list. For example, <c>removeExtras([3, 3, 1])</c> returns <c>[3, 1]</c> and <c>removeExtras([7, 7, 8, 8, 9, 9, 9, 10, 9, 10, 11])</c> returns <c>[7, 8, 9, 10, 9, 10, 11]</c>.</p>
        </statement>
        <program xml:id="removeExtras_fix_timed-p_editor" interactive="activecode" language="python">
          <input>
def removeExtras(a_list):
    prev = a_list[0]
    index = 0
    while index &gt; len(a_list) - 1:
        if a_list[index] = prev:
            a_list.pop(index)
        else:
            prev = a_list[index]
        index -= 1
        return a_list

print(removeExtras([3, 3, 1]))
print(removeExtras([7, 7, 8, 8, 9, 9, 9, 10, 9, 10, 11]))
====
from unittest.gui import TestCaseGui

class myTests(TestCaseGui):

    def testOne(self):
        self.assertEqual(removeExtras([5, 5, 1]), [5, 1], 'removeExtras([5, 5, 1)]')
        self.assertEqual(removeExtras([1, 1, 2, 2, 3, 3, 3, 5, 6, 5, 6]), [1, 2, 3, 5, 6, 5, 6], 'removeExtras([1, 1, 2, 2, 3, 3, 3, 5, 6, 5, 6])')
        self.assertEqual(removeExtras([1, 2, 3, 3]), [1, 2, 3], 'removeExtras([1, 2, 3, 3)]')
        self.assertEqual(removeExtras([5, 3, 1]), [5, 3, 1], 'removeExtras([5, 3, 1)]')
        self.assertEqual(removeExtras([5, 5, 5]), [5], 'removeExtras([5, 5, 5)]')
        self.assertEqual(removeExtras([5, 1, 1]), [5, 1], 'removeExtras([5, 1, 1)]')
        self.assertEqual(removeExtras([5, 1, 5]), [5, 1, 5], 'removeExtras([5, 1, 5)]')
        self.assertEqual(removeExtras([2, 3, 4, 3]), [2, 3, 4, 3], 'removeExtras([2, 3, 4, 3)]')
        self.assertEqual(removeExtras([2, 2]), [2], 'removeExtras([2, 2)]')
        self.assertEqual(removeExtras([2]), [2], 'removeExtras([2]')

myTests().main()
        </input>
        </program>
      </exercise>
    </TimedNode>
    <p>Click on the <q>Finish Exam</q> button shown before the question when you are done with the above question
                and then answer the poll below.</p>
    <exercise runestone="removeExtras_fix_timed_poll-p"/>
  </subsection>
  <subsection xml:id="exp_posttest-problem-2">
    <title>Posttest Problem 2</title>
    <p>Try to solve the following fix code problem.  You have five minutes to try to
                solve it.  It is okay if you can't solve it, you will earn credit for trying to
                solve it.</p>
    <p>Click on the <q>Start</q> button to show the problem.</p>
    <TimedNode line="168" runestone_options="{'timelimit': 5, 'subchapter': 'diss-post', 'chapter': 'exp', 'basecourse': 'py4e-int', 'optional': '', 'optclass': '', 'divid': 'post-exa-2-p', 'qnumber': '', 'question_label': '8'}" source="/home/david/comsc020/py4e-int/_sources/exp/diss-post.rst">
      <exercise label="find_extras_fix_timed-p">
        <statement>
          <p>Fix the function <c>two_cats</c> below to return True if there are at least two adjacent <q>cat</q> strings in list <c>pets</c>, otherwise return False.  For example, return <c>True</c> for <c>two_cats(['dog', 'cat', 'cat'])</c> since there are two adjacent items equal to &#x2018;cat' (at index 1 and 2) and <c>False</c> for <c>two_cats(['cat', 'dog', 'cat'])</c> since the &#x2018;cat' strings are not adjacent.</p>
        </statement>
        <program xml:id="find_extras_fix_timed-p_editor" interactive="activecode" language="python">
          <input>
def two_cats(pets):
    i = 1
    while i &lt; pets:
        if pets[i] = 'cat' and pets[i - 2] == 'cat':
            return true
        i += 1
        return False

print(two_cats(['dog', 'cat', 'cat']))
print(two_cats(['cat', 'dog', 'cat']))
====
from unittest.gui import TestCaseGui

class myTests(TestCaseGui):

    def testOne(self):
        self.assertEqual(two_cats(['dog', 'cat', 'cat']), True, "two_cats(['dog', 'cat', 'cat'])")
        self.assertEqual(two_cats(['dog', 'cat', 'dog', 'cat']), False, "two_cats(['dog', 'cat', 'dog', 'cat'])")
        self.assertEqual(two_cats(['cat', 'dog', 'cat']), False, "two_cats(['cat', 'dog', 'cat'])")
        self.assertEqual(two_cats(['cat', 'cat', 'dog']), True, "two_cats['cat', 'cat', 'dog'])")
        self.assertEqual(two_cats(['bird', 'fish', 'cat']), False, "two_cats(['bird', 'fish', 'cat'])")
        self.assertEqual(two_cats(['cat']), False, "two_cats(['cat'])")
        self.assertEqual(two_cats([]), False, "two_cats([])")
        self.assertEqual(two_cats(['cat', 'bird', 'fish', 'cat']), False, "two_cats([['cat', 'bird', 'fish', 'cat']])")
        self.assertEqual(two_cats(['fish', 'cat', 'cat', 'fish', 'fish']), True, "two_cats(['fish', 'cat', 'cat', 'fish', 'fish']")
        self.assertEqual(two_cats(['cat', 'bird', 'bird', 'cat']), False, "two_cats(['cat', 'bird', 'bird', 'cat'])")

myTests().main()
        </input>
        </program>
      </exercise>
    </TimedNode>
    <p>Click on the <q>Finish Exam</q> button shown before the question when you are done with the above question
                and then answer the poll below.</p>
    <exercise runestone="find_extras_fix_timed_poll-p"/>
  </subsection>
</section>
