<?xml version="1.0"?>
<section xml:id="conditional_chained-conditionals">
  <title>Chained conditionals</title>
    <idx>Chained Conditional</idx>
    <idx><h>Keyword</h><h>Elif</h></idx>
    <idx><h>Elif</h><h>Keyword</h></idx>
  <p>Sometimes there are more than two possibilities and we need more than
    two branches. For example, when we compare two numbers <c>x</c> and <c>y</c>, we have three possibilities:
    <ul>
      <li><c>x</c> is less than <c>y</c></li>
      <li><c>x</c> is greater than <c>y</c></li>
      <li><c>x</c> equals <c>y</c></li>
    </ul>
      
    
    One way to express a computation like that is a
            <em>chained conditional</em>:</p>
  <program xml:id="cndtnl_elif" interactive="codelens" language="python">
    <input>
x = 12
y = 12.0
if x &lt; y:
    print('x is less than y')
elif x &gt; y:
    print('x is greater than y')
else:
    print('x and y are equal')
print('All done.')
    </input>
  </program>
  <p><c>elif</c> is an abbreviation of <q>else if.</q> Again, exactly one
    branch will be executed. The flowchart for this program is shown in <xref ref="fig_chained_elif"/>.</p>
  <figure xml:id="fig_chained_elif" align="">
    <title>Flowchart of <c>if</c>-<c>elif</c> Chain</title>
    <caption>Flowchart of <c>if</c>-<c>elif</c> Chain</caption>
    <image source="images/elif.svg" width="50%" alt="If-ElseIf Logic"/>
  </figure>
  
  <p>Notice that we didn't have to test <c>x == y</c>; if <c>x</c> isn't greater than <c>y</c>, and it isn't less than <c>y</c>, then they <em>must</em> be equal. A simple <c>else</c> takes care of that case.</p>
  
  <p>There is no limit on the number of <c>elif</c> statements in a chain. If
            there is an <c>else</c> clause, it has to be at the end, but there
            doesn't have to be one. Try running the following program to see what it does.</p>
  <program xml:id="elif_example" interactive="activecode" language="python">
    <input>
choice = 'b'
if choice == 'a':
    print('You chose A')
elif choice == 'b':
    print('You chose B')
elif choice == 'c':
    print('You chose C')
else:
    print('You chose some other letter.')
    </input>
  </program>
  
  <p>Each condition is checked in order. If the first is false, the next is
            checked, and so on. If one of them is true, the corresponding branch
            executes, and the statement ends. Even if more than one condition is
            true, only the first true branch executes.</p>
          <p>If none of the conditions is true and you have an <c>else</c> clause at the end, its body will execute.</p>
  
    <p>Now make these changes to the preceding program:
    <ul>
      <li>Change the first line to <c>choice = 'x'</c>. What do you think the output will be? Run the program and find out if you were right.</li>
      <li>Comment out the last two lines by putting a <c>#</c> at the beginning of each line. Now what do you think the output will be? Run the program again. Spoiler alert: Because there is now no <c>else</c>, the program will not print anything.</li>
    </ul>
  </p>

  <exercise label="cndtnl-chain-mc-elif">
    <statement>
      <p>What will the following code print when <c>x = 3</c>, <c>y = 5</c>, and <c>z = 2></c>?</p>
      <program language="python">
        <input>
if x &lt; y and x &lt; z:
    print("a")
elif y &lt; x and y &lt; z:
    print("b")
else:
    print("c")
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>a</p>
        </statement>
        <feedback>
          <p>While the value in x is less than the value in y (3 is less than 5) it is not less than the value in z (3 is not less than 2).</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>b</p>
        </statement>
        <feedback>
          <p>The value in y is not less than the value in x (5 is not less than 3).</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>c</p>
        </statement>
        <feedback>
          <p>Since the first two Boolean expressions are false the else will be executed.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="cndtnl-chain-mc-grades">
    <statement>
      <p>When <c>score = 93</c>, what will print when the following code executes?</p>
      <pre>if score &gt;= 90:
    grade = "A"
elif score &gt;= 80:
    grade = "B"
elif score &gt;= 70:
    grade = "C"
elif score &gt;= 60:
    grade = "D"
else:
    grade = "E"
print(grade)</pre>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>A</p>
        </statement>
        <feedback>
          <p>Because the first statement is satisfied, it does not continue to the following elif or else statements.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>B</p>
        </statement>
        <feedback>
          <p>Try again. This code skips the elif/else statements once an if/elif statement has been satisfied.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>C</p>
        </statement>
        <feedback>
          <p>Try again. This code skips the elif/else statements once an if/elif statement has been satisfied.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>D</p>
        </statement>
        <feedback>
          <p>Try again. This code skips the elif/else statements once an if/elif statement has been satisfied.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>E</p>
        </statement>
        <feedback>
          <p>This will only be true when score does not satisfy the other if/elif statements (so it will only execute when score &lt; 60).</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="cndtnl-chain-mc-ifGrades">
    <statement>
      <p>Q-5: If score = 93, what will print when the following code executes?</p>
      <pre>if score &gt;= 90:
    grade = "A"
if score &gt;= 80:
    grade = "B"
if score &gt;= 70:
    grade = "C"
if score &gt;= 60:
    grade = "D"
if score &lt; 60:
    grade = "E"
print(grade)</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>A</p>
        </statement>
        <feedback>
          <p>Notice that each of the first 4 statements start with an if.  What is the value of grade when it is printed?</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>B</p>
        </statement>
        <feedback>
          <p>Each of the first 4 if statements will execute.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>C</p>
        </statement>
        <feedback>
          <p>Copy this code to an activecode window and run it.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>D</p>
        </statement>
        <feedback>
          <p>Each of the first 4 if statements will be executed. So grade will be set to A, then B then C and finally D.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>E</p>
        </statement>
        <feedback>
          <p>This will only be true when score is less than 60.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <!--
  <p>
    From the last two exercises, you can see that an <c>if</c>/<c>elif</c> chain is very different from a series of separate <c>if</c> statements.
    To bring this home, look at the next two programs and their flowcharts. Copy and paste them into the following ActiveCode area and run them to see the difference.
  </p>
  
  <sidebyside width="50%">
    <program language="python">
      <input>percent = 80
if percent >= 75:
    print("great")
elif percent >= 50:
    print("good")
elif percent &lt; 50:
    print("fair")
        </input>
      </program>
      
       <figure xml:id="fig_example_elif" align="">
    <title>Use of <c>if</c>-<c>elif</c> Chain</title>
    <caption>Use of <c>if</c>-<c>elif</c> Chain</caption>
    <image source="conditional/flowchart1.svg" width="15%" alt="If-ElseIf Logic"/>
  </figure> 
</sidebyside>

<sidebyside width="50%">
    <program language="python">
      <input>percent = 80
if percent >= 75:
    print("great")
if percent >= 50:
    print("good")
if percent &lt; 50:
    print("fair")
        </input>
      </program>
      
       <figure xml:id="fig_example_separate_if" align="">
    <title>Example of separate <c>if</c> Statements</title>
    <caption>Example of separate <c>if</c> Statements</caption>
    <image source="conditional/flowchart2.svg" width="15%" alt="Separate if Logic"/>
  </figure> 
</sidebyside>

<p>Paste the preceding two programs, one at a time, into this ActiveCode area and run them. See if you can figure out what they will do <em>before</em> you run the code.</p>
  <program interactive="activecode" language="python">
    <input>
# paste code here..
</input>
  </program>
  -->

</section>
