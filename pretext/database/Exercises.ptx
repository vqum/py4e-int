<?xml version="1.0"?>
<exercises xml:id="database_multiple-choice-questions">
  <title>Multiple Choice Questions</title>
  <exercise label="dbEx_MC1">
    <statement>
      <p>Q-1: Looking at the code below, what would this line do?</p>
      <pre>INSERT INTO Cats (name, breed) VALUES ('Petunia', 'American Shorthair')</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Add a table to the Cats database with the name "Petunia" and breed "American Shorthair".</p>
        </statement>
        <feedback>
          <p>Try Again! Inserts adds a row to a table.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Add a row to the Cats table with the name "Petunia" and the breed "American Shorthair".</p>
        </statement>
        <feedback>
          <p>Correct! This will insert a row in the table Cats with the name "Petunia" and the breed "American Shorthair".</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Create the table Cats.</p>
        </statement>
        <feedback>
          <p>Try Again! This line wouldn't create a new table.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Add a row to the Cats table with the name "American Shorthair" and the breed "Petunia".</p>
        </statement>
        <feedback>
          <p>Try Again! Check the order of the columns and values.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC2">
    <statement>
      <p>Q-2: Looking at the code below, what would this line do to the table <c>Cats</c>?</p>
      <pre>cur.execute('DROP TABLE IF EXISTS Cats ')</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>It will remove the row "Cats".</p>
        </statement>
        <feedback>
          <p>Try again! "Cats" is not a tuple (row).</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It will move "Cats" to the end of the database.</p>
        </statement>
        <feedback>
          <p>Try again! That's not quite what drop means in SQL.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It will remove the column "Cats".</p>
        </statement>
        <feedback>
          <p>Try again! "Cats" is not an attribute (column).</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>It will remove the table "Cats".</p>
        </statement>
        <feedback>
          <p>Correct! "Cats" is a relation (table), so this line will remove it from the database.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC3">
    <statement>
      <p>Q-3: Which SQL keyword is used to combine rows from two tables in a database?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>IN</p>
        </statement>
        <feedback>
          <p>Try again! The IN operator allows you to specify multiple values in a WHERE clause</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>JOIN</p>
        </statement>
        <feedback>
          <p>Correct! A JOIN clause is used to combine rows from two or more tables, based on a related column between them.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>BETWEEN</p>
        </statement>
        <feedback>
          <p>Try again! The BETWEEN operator selects values within a given range.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>SELECT INTO</p>
        </statement>
        <feedback>
          <p>Try again! The SELECT INTO statement copies data from one table into a new table.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC4">
    <statement>
      <p>Q-4: How can you delete all of the rows where the <q>name</q> is <q>Ruby</q> in the Cats Table?</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>DELETE FROM Cats WHERE name = 'Ruby'</p>
        </statement>
        <feedback>
          <p>Correct! This tells the program to remove all rows with a name equal to "Ruby" from the "Cats" table.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>DELETE name='Ruby' FROM Cats</p>
        </statement>
        <feedback>
          <p>Try again! The table should be called first.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>DELETE ROW name='Ruby' FROM Cats</p>
        </statement>
        <feedback>
          <p>Try again! You do not need to use the command "ROW". It will already delete the data associated with Ruby's entry.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>DELETE FROM Cats WHERE name == 'Ruby'</p>
        </statement>
        <feedback>
          <p>Try again! You do not use == in SQL</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC5_new">
    <statement>
      <p>Q-5: Which of the following is <term>not</term> a SQL constraint?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>UNIQUE</p>
        </statement>
        <feedback>
          <p>Try again! This constraint ensures that all values in a column are different</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>PRIMARY KEY</p>
        </statement>
        <feedback>
          <p>Try again! This constraint uniquely identifies each row in a table.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>LOGICAL KEY</p>
        </statement>
        <feedback>
          <p>Correct! This is not a SQL constraint, because it is what *we* use to refer to a row, not the program's identifier.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>NOT NULL</p>
        </statement>
        <feedback>
          <p>Try again! This constraint ensures that a column cannot have a NULL value.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC6_new">
    <statement>
      <p>Q-6: Which command will try to remove data from a table in a database?</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>DELETE</p>
        </statement>
        <feedback>
          <p>Correct! Delete will try to remove data from a database.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>REMOVE</p>
        </statement>
        <feedback>
          <p>Try Again! Remove is not a valid keyword for database.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>COLLAPSE</p>
        </statement>
        <feedback>
          <p>Try Again! Collapse is not a valid keyword for a database.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>DROP</p>
        </statement>
        <feedback>
          <p>Try Again! This is used to delete an entire table from a database.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC7">
    <statement>
      <p>Q-7: Which is the correct command for a statement that will select data from the Breed column in the Cats table?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>SELECT FROM Breed,Cats</p>
        </statement>
        <feedback>
          <p>Try again! The order of the commands and names are mixed up and no commas are necessary here!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>SELECT Cats FROM Breed</p>
        </statement>
        <feedback>
          <p>Try again! The SELECT command should be followed by column name and the ROW command should be followed by a table name.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>SELECT Breed FROM Cats</p>
        </statement>
        <feedback>
          <p>Correct! This command is very straight forward! It <i>selects</i> the <i>breed</i> <i>from</i> the table <i>cats</i></p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>FROM Cats SELECT Breed</p>
        </statement>
        <feedback>
          <p>Try again! The commands are in the wrong order. The SELECT command should come before the FROM command.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC8">
    <statement>
      <p>Q-8: True or False? The following line will select all columns for the name <q>Bernard</q> from the table <q>Cats</q>.</p>
      <pre>SELECT * FROM Cats WHERE name = 'Bernard'</pre>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>True</p>
        </statement>
        <feedback>
          <p>Correct! * indicates that you want the database to return all of the columns for each row that matches the WHERE clause.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>False</p>
        </statement>
        <feedback>
          <p>Try again! What does the * indicate?</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC9">
    <statement>
      <p>Q-9: True or False? SQLite will <term>not</term> let two programs change the same data at the same time.</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>True</p>
        </statement>
        <feedback>
          <p>Correct! SQLite takes care to keep two programs from changing the same data at the same time, so make sure you save frequently!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>False</p>
        </statement>
        <feedback>
          <p>Try again! You cannot change the same data at the same time on SQLite.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dbEx_MC10">
    <statement>
      <p>Q-10: True or False? A cursor is used to create a database.</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>True</p>
        </statement>
        <feedback>
          <p>Try again! A connection is used to create a database, while a cursor is used to execute SQL commands on the database.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>False</p>
        </statement>
        <feedback>
          <p>Correct! A cursor is used to execute SQL commands in a database and retrieve data from the database, not create one.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</exercises>
