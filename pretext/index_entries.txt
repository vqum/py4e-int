../_sources/ack/AA-contrib.rst
.. index::
    single: GNU Free Documentation License
    single: Free Documentation License, GNU

.. index::
    single: GNU Free Documentation License
    single: Free Documentation License, GNU

.. index::
    single: contributors

#=======================
../_sources/classes-basics/MultipleClassesPractice.rst
.. index:: class; multiple

#=======================
../_sources/classes-basics/MultipleClassesPractice_orig.rst
.. index:: class; multiple

#=======================
../_sources/classes-basics/Objectorientedprogramming.rst
.. index:: object-oriented programming
   OOP
   object

#=======================
../_sources/classes-basics/ObjectsRevisited.rst
.. index:: state of an object

#=======================
../_sources/classes-basics/UserDefinedClasses.rst
.. index:: class; user defined
   user defined class
   attribute

#=======================
../_sources/classes-basics/MultipleClasses.rst
.. index:: class; multiple

#=======================
../_sources/classes-basics/MultipleClassesMCQs.rst
.. index:: class; multiple

#=======================
../_sources/conditional/altExecution.rst
.. index::
    single: Alternative Execution
    pair: Keyword; Else
    single: Branch

#=======================
../_sources/conditional/debugging.rst
.. index::
    single: Debugging
    single: Traceback
    single: Whitespace

#=======================
../_sources/conditional/logicalOperators.rst
.. index::
    pair: Logical; Operator
    pair: And; Operator
    pair: Not; Operator
    pair: Or; Operator

#=======================
../_sources/conditional/nested.rst
.. index::
    single: Nested Conditional

#=======================
../_sources/conditional/shortCircuit.rst
.. index::
    single: Short Circuit
    single: Guardian Pattern
    single: Guard

#=======================
../_sources/conditional/tryExcept.rst
.. index::
    single: Traceback
    single: Fahrenheit
    single: Celsius
    single: Temperature Conversion
    single: Try
    single: Except

#=======================
../_sources/conditional/boolean.rst
.. index::
    single: Boolean Expression
    pair: Boolean; Expression
    single: Logical Operator
    pair: Logical; Operator
    pair: Special Value; True
    pair: Special Value; False
    single: Bool Type
    single: True
    single: False
    pair: Comparison; Operator

#=======================
../_sources/conditional/chained.rst
.. index::
    single: Chained Conditional
    pair: Keyword; Elif

#=======================
../_sources/conditional/conditionalEx.rst
.. index::
    pair: Conditional; Statement
    pair: If; Statement
    single: Conditional Executions
    single: Condition
    pair: Compound; Statement
    pair: Pass; Statement
    single: Pair

#=======================
../_sources/database/3Keys.rst
.. index::
    single: Key
    single: Logical Key
    single: Primary Key
    single: Foreign Key

#=======================
../_sources/database/SQLsummary.rst
.. index::
    single: SQL
    pair: SQL; SELECT

#=======================
../_sources/database/basicModeling.rst
.. index::
    single: Data Model
    single: Normalization
    single: Key

#=======================
../_sources/database/creatingDBtable.rst
.. index::
    single: SQL
    single: Table
    single: Column
    single: Connect
    single: Cursor
    single: Unicode

#=======================
../_sources/database/dbBrowserSQLite.rst
.. index::
    single: SQLite
    single: Database Browser

#=======================
../_sources/database/dbConcepts.rst
.. index::
    single: Row
    single: Table
    single: Column
    single: Tuple
    single: Relation
    single: Attribute

#=======================
../_sources/database/debugging.rst
.. index::
    single: Debugging
    single: Database Browser

#=======================
../_sources/database/more-select.rst
.. index::
    pair: SQL; SELECT COUNT

#=======================
../_sources/database/multTables.rst
.. index::
    pair: Database; Constraints

#=======================
../_sources/database/spideringTwitter.rst
.. index::
    single: Spidering
    single: Tuple

#=======================
../_sources/database/whatIsADatabase.rst
.. index::
    single: Database
    pair: Database; Indexes
    single: SQL

#=======================
../_sources/database/usingJOIN.rst
.. index::
    pair: SQL; JOIN
    pair: SQL; SELECT

#=======================
../_sources/debugging/HowtoAvoidDebugging.rst
.. index:: boundary conditions, testing, debugging

#=======================
../_sources/dictionaries/debugging.rst
.. index::
   single: Debugging Dictionaries

#=======================
../_sources/dictionaries/dictionaries1.rst
.. index::
   single: Dictionary
   single: Key
   single: Index
   single: Key-Value Pair
   single: KeyError
   single: Len function
   single: In operator
   single: Values operator
   single: Hash Table

#=======================
../_sources/dictionaries/dictionariesandfiles.rst
.. index::
   single: Nested Loops

#=======================
../_sources/dictionaries/dictionarycounters.rst
.. index::
   single: Counter
   single: Implementation
   single: Get Method

#=======================
../_sources/dictionaries/loopinganddictionaries.rst
.. index::
   single: Trasversal
   single: Keys Method

#=======================
../_sources/files/debugging.rst
.. index::
    single: Debugging
    single: Whitespace
    pair: Repr; Function
    single: String Representation
    single: End of Line Character

#=======================
../_sources/files/openingFiles.rst
.. index::
    pair: Function; Open
    pair: File; Open
    single: File Handle

#=======================
../_sources/files/persistence.rst
#=======================
../_sources/files/readingFiles.rst
.. index::
    pair: Reading; File
    single: Counter
    pair: File; Open

#=======================
../_sources/files/searching.rst
.. index::
    pair: Filter; Pattern
    pair: Search; File

#=======================
../_sources/files/textFiles.rst
.. index::
    single: Newline
    single: Text File

#=======================
../_sources/files/userNames.rst
.. index::
    pair: File; Name

#=======================
../_sources/files/writingFiles.rst
.. index::
    pair: File; Writing
    single: Newline
    pair: Method; close

#=======================
../_sources/files/tryExceptOpen.rst
.. index::
    pair: Quality; Assurance
    pair: Statement; Try
    pair: Open; Statement
    pair: IOError; Exception
    single: Pythonic

#=======================
../_sources/functions/addingnewfunctions.rst
.. index::
    single: Function
    pair: Function; Definition
    pair: Def; Keyword
    single: Argument
    pair: Parentheses; Empty
    single: Header
    single: Body
    single: Indentation
    single: Colon
    single: Ellipses
    pair: Function; Object

#=======================
../_sources/functions/builtin.rst
.. index::
    pair: Built-in; Function

#=======================
../_sources/functions/debugging.rst
.. index::
    single: Debugging
    single: Whitespace

#=======================
../_sources/functions/definitionsanduses.rst
.. index::
    pair: Function; Definition
    single: Use Before Def

#=======================
../_sources/functions/flowofexecution.rst
.. index::
    single: Flow of Execution
    single: Definition

#=======================
../_sources/functions/fruitfulvoid.rst
.. index::
    single: Script Mode
    single: Interactive Mode
    pair: Function; Fruitful
    pair: Function; Void
    pair: Special Value; None

#=======================
../_sources/functions/functioncalls.rst
.. index::
    single: Function Call
    pair: Parentheses; Argument In
    single: Argument
    single: Return Value

#=======================
../_sources/functions/mathfunctions.rst
.. index::
    pair: Math; Function
    pair: Module; Object
    single: Dot Notation
    single: Pi
    pair: Log; Function
    single: Radian
    pair: Trigonometric; Function
    pair: Sine; Function
    pair: Sqrt; Function

#=======================
../_sources/functions/parametersandargs.rst
.. index::
    pair: Parameter; Function
    single: Parameter
    pair: Function; Argument
    pair: Parentheses; Parameters In
    single: Composition
    single: Argument

#=======================
../_sources/functions/randomnumbers.rst
.. index::
    pair: Random; Number
    single: Deterministic
    single: Pseudorandom
    pair: Random; Module
    pair: Random; Function
    pair: Randint; Function
    pair: Choice; Function

#=======================
../_sources/functions/typeconversion.rst
.. index::
    pair: Conversion; Type
    pair: Function; Int
    pair: Function; Float
    pair: Function; String

#=======================
../_sources/functions/whyfunctions.rst
.. index::
    pair: function; reasons for

#=======================
../_sources/functions/func-group.rst
.. index::
    single: function
    pair: function; definition
    pair: function; header

#=======================
../_sources/inheritance/MoreOnTesting.rst
#=======================
../_sources/inheritance/PillarsOfOop.rst
.. index:: inheritance

#=======================
../_sources/inheritance/UnitTests.rst
.. index:: f-string

.. index:: list comprehension

.. index:: unit tests

#=======================
../_sources/intro/buildingBlocks.rst
.. index::
    single: Input
    single: Sequential Execution
    single: Output
    single: Conditional Execution
    single: Repeated Execution
    single: Reuse

#=======================
../_sources/intro/computerHardwareArch.rst
.. index::
    single: Hardware
    pair: Hardware; Architecture
    single: Program
    single: Central Processing Unit
    single: Main Memory
    single: Secondary Memory
    single: Input and Output Devices
    single: Network Connection

#=======================
../_sources/intro/goWrong.rst
.. index::
    single: Syntax Error
    single: Semantic Error
    single: Logic Error

#=======================
../_sources/intro/terminology.rst
.. index::
    single: High-level Language
    single: Machine Language
    single: Low-level Language
    single: Portable
    single: Interpreter
    single: Compiler

#=======================
../_sources/intro/understanding.rst
.. index::
    single: Problem Solving

#=======================
../_sources/intro/whatIsAProgram.rst
.. index::
    single: Program

#=======================
../_sources/intro/words-and-sentences.rst
.. index::
    single: Programming Language
    single: Reserved Words

#=======================
../_sources/intro/writingPrograms.rst
.. index::
    single: Script

#=======================
../_sources/iterations/debugging.rst
.. index::
    single: Debugging
    pair: Debugging; By Bisection

#=======================
../_sources/iterations/definite_for.rst
.. index::
    pair: For; Statement
    pair: For; Loop
    pair: Variable; Iteration

#=======================
../_sources/iterations/loops.rst
.. index::
    single: Iteration
    pair: For; Loop
    pair: While; Loop
    pair: Accumulator; Sum
    pair: Maximum; Loop
    pair: Minimum; Loop
    pair: Special Value; None

#=======================
../_sources/iterations/updating.rst
.. index::
    single: Update
    pair: Updating; Variable
    pair: Initialize; Before Update
    single: Increment
    single: Decrement

#=======================
../_sources/iterations/while.rst
.. index::
    pair: While; Statement
    pair: While; Loop
    single: Iteration
    single: Flow of Execution
    single: Condition
    single: Loop
    single: Body

#=======================
../_sources/iterations/continue.rst
.. index::
    pair: Continue; Statement

#=======================
../_sources/iterations/infinite_loops.rst
.. index::
    single: Infinite Loop
    pair: Loop; Infinite
    pair: Break; Statement

#=======================
../_sources/lists/aliasing.rst
.. index::
    single: Aliasing
    pair: Reference; Aliasing
    single: Reference
    pair: List; Mutability
    pair: String; Immutable

#=======================
../_sources/lists/debugging.rst
.. index::
    single: Debugging
    pair: Method; Sort
    single: Idiom
    pair: Copy to Avoid; Aliasing

#=======================
../_sources/lists/deleteElement.rst
.. index::
    pair: Element; Deletion
    pair: Method; Pop
    pair: Del; Operator
    pair: Remove; Method
    pair: None; Special Value

#=======================
../_sources/lists/listAsArgument.rst
.. index::
    pair: Argument; List
    single: Argument
    single: Reference
    single: Parameter
    pair: Method; Append
    pair: List; Concatenate
    pair: Concatenation; List
    pair: Operator; Slice
    pair: Slice; Operator
    pair: Append; Method

#=======================
../_sources/lists/listFunctions.rst
.. index::
    pair: Built-in; Function
    pair: List; Function

#=======================
../_sources/lists/listMethods.rst
#=======================
../_sources/lists/listOperations.rst
.. index::
    pair: List; Operations
    pair: List; Concatenation
    pair: List; Repetition

#=======================
../_sources/lists/listsAndStrings.rst
.. index::
    single: List
    single: String
    single: Sequence
    pair: List; Function
    pair: Split; Function
    pair: Optional; Argument
    single: Delimiter
    pair: Join; Method
    single: Concatenation
    pair: Empty; String

#=======================
../_sources/lists/mutable.rst
.. index::
    pair: List; Element
    single: Access
    single: Index
    pair: Bracket; Operator
    single: mutability
    pair: Item; Assignment
    single: IndexError
    pair: IndexError; Exception
    pair: List; Index
    pair: List; Membership
    pair: Operator; In

#=======================
../_sources/lists/objectsValues.rst
#=======================
../_sources/lists/parsing.rst
.. index::
    pair: List; Parsing

#=======================
../_sources/lists/sequence.rst
.. index::
    single: Element
    single: Sequence
    single: Item
    single: Assignment
    single: Nested List
    pair: Empty; List

#=======================
../_sources/lists/slice.rst
.. index::
    pair: Operator; Slice
    pair: Index; Slice
    pair: List; Slice
    pair: List; Copy
    pair: Slice; Copy
    pair: Index; Mutability
    pair: Slice; Update

#=======================
../_sources/lists/traversing.rst
.. index::
    pair: List; Traversal
    pair: Loop; For
    pair: For; Statement
    single: Looping with indicies
    pair: Index; Looping with
    pair: Item; Update
    single: Nested List

#=======================
../_sources/regex/bonussection.rst
.. index::
   single: Grep

#=======================
../_sources/regex/charactermatching.rst
.. index::
   single: Wild Card
   single: Greedy

#=======================
../_sources/regex/extractingdata.rst
.. index::
   single: Findall Method
   single: Regex Square Brackets

#=======================
../_sources/regex/regularexpressions.rst
.. index::
   single: Regular Expressions
   single: Regex

#=======================
../_sources/strings/comparison.rst
.. index::
    pair: String; Comparison

#=======================
../_sources/strings/count.rst
.. index::
    single: Counter
    pair: Looping; Strings
    pair: Looping; Counting
    single: Encapsulation

#=======================
../_sources/strings/debugging.rst
.. index::
    single: Debugging
    pair: Guardian; Pattern

#=======================
../_sources/strings/format.rst
.. index::
    pair: Operator; Format
    single: Format String
    single: Format Sequence
    single: TypeError

#=======================
../_sources/strings/immutable.rst
.. index::
    single: Mutability
    single: Immutability
    pair: String; Immutable
    single: TypeError
    single: Object
    pair: Item; Assignment
    single: Concatenation

#=======================
../_sources/strings/in.rst
.. index::
    pair: In; Operator
    pair: Boolean; Operator

#=======================
../_sources/strings/length.rst
.. index::
    pair: Function; Len
    single: IndexError
    pair: Index; Negative

#=======================
../_sources/strings/methods.rst
.. index::
    pair: String; Method
    pair: Dot; Notation
    pair: Parentheses; Empty
    single: Invocation
    pair: Optional; Argument
    pair: Count; Method

#=======================
../_sources/strings/parsing.rst
.. index::
    pair: Parsing; String
    pair: Method; Find

#=======================
../_sources/strings/sequence.rst
.. index::
    single: Sequence
    single: Character
    pair: Operator; Bracket
    single: Index
    pair: Index; Starting at Zero
    single: TypeError

#=======================
../_sources/strings/slices.rst
.. index::
    pair: Slice; Operator
    pair: String; Slice
    pair: Index; Slice
    single: Quotation Mark
    pair: Copy; Slice

#=======================
../_sources/strings/traversal.rst
.. index::
    single: Traversal
    pair: Loop; Traversal
    pair: For; Loop
    pair: For; Statement

#=======================
../_sources/tuples/comparingtuples.rst
.. index::
   single: Tuple Comparison
   single: DSU Pattern
   single: Decorate
   single: Sort
   single: Undecorate

#=======================
../_sources/tuples/debugging.rst
.. index::
   single: Debugging Tuples
   single: Shape Error

#=======================
../_sources/tuples/dictionariesandtuples.rst
.. index::
   single: Item Method
   single: Key-Value Pairs

#=======================
../_sources/tuples/multipleassignments.rst
.. index::
   single: Dictionary Traversal

#=======================
../_sources/tuples/sequences.rst
.. index::
   single: Sequence
   single: Mutability
   single: Sorted Function
   single: Reversed Function

#=======================
../_sources/tuples/tupleassignment.rst
.. index::
   single: Tuple Assignment
   single: Swap Pattern

#=======================
../_sources/tuples/tuplesareimmutable.rst
.. index::
   single: Tuple
   single: Sequence
   single: Immutable
   single: Slice Operator
   single: Item Assignment

#=======================
../_sources/tuples/usingtuplesaskeys.rst
.. index::
   single: Tuples as Keys

#=======================
../_sources/turtles/functionsWithTurtles.rst
#=======================
../_sources/turtles/names4turtles.rst
#=======================
../_sources/turtles/patterns.rst
#=======================
../_sources/turtles/repeatturtles.rst
#=======================
../_sources/variables/comments.rst
.. index::
    single: comment

#=======================
../_sources/variables/debugging.rst
.. index::
    single: Debugging
    single: Syntax Error
    single: Error Message
    single: Use Before Def
    single: Exception
    single: Runtime Error
    single: Semantic Error
    pair: Case-sensitivity; Variable Names
    single: Order of Operations

#=======================
../_sources/variables/expressions.rst
.. index::
    single: Expression
    single: Evaluate

#=======================
../_sources/variables/mnemonic-names.rst
.. index::
    single: Mnemonic
    single: Reserved Words

#=======================
../_sources/variables/modulus.rst
.. index::
    pair: Modulus; Operator
    single: Divisibility

#=======================
../_sources/variables/operators-and-operands.rst
.. index::
    single: Operators
    pair: Operator; Arithmetic
    single: Operand
    single: Expression
    single: Python 3.0
    single: Python 2.0
    pair: Floating-point; Division

#=======================
../_sources/variables/statements.rst
.. index::
    single: Statement
    single: Interactive Mode
    single: Script Mode

#=======================
../_sources/variables/string-operations.rst
.. index::
    pair: String; Operator
    single: String Operations
    single: Concatenation

#=======================
../_sources/variables/values-and-types.rst
.. index::
    single: Value
    single: Type
    single: String
    single: Quotation Mark
    pair: Class; Str
    pair: Class; Int
    pair: Class; Float
    single: Semantic Error
    single: Error Message

#=======================
../_sources/variables/variable-names-keywords.rst
.. index::
    single: Keyword
    single: Underscore Character
    single: Reserved Words

#=======================
../_sources/variables/variables-section.rst
.. index::
    single: Variable
    single: Assignment
    pair: Assignment; Statement

#=======================
../_sources/variables/user-input.rst
.. index::
    single: Keyboard Input
    single: Python 2.0
    single: Prompt
    single: Newline
    single: ValueError

#=======================
../_sources/viz/visualizingdata.rst
.. index::
    single: Visualizing data

#=======================
../_sources/web/applicationProg.rst
.. index::
    single: API
    single: SOA
    single: Web Services
    single: Service-Oriented Architecture

#=======================
../_sources/web/loopingNodes.rst
.. index::
    single: ElementTree
    pair: ElementTree; Findall

#=======================
../_sources/web/parsingJSON.rst
.. index::
    single: JSON

#=======================
../_sources/web/securityAPI.rst
.. index::
    single: OAuth
    pair: Key; API

#=======================
../_sources/web/JSON.rst
.. index::
    single: JSON
    single: JavaScript Object Notation

#=======================
../_sources/web/parsingXML.rst
.. index::
    single: Element Tree

#=======================
../_sources/web/xml.rst
.. index::
    single: XML

#=======================
