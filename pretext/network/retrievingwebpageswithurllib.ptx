<?xml version="1.0"?>
<section xml:id="network_retrieving-web-pages-with-urllib">
  <title>Retrieving web pages with <c>urllib</c></title>
  <p>While we can manually send and receive data over HTTP using the socket
            library, there is a much simpler way to perform this common task in
            Python by using the <c>urllib</c> library.</p>
  <p>Using <c>urllib</c>, you can treat a web page much like a file.
            You simply indicate which web page you would like to retrieve and
            <c>urllib</c> handles all of the HTTP protocol and header details.</p>
  <exercise label="network_retrieve_fitb">
    <statement>
      <p>Q-1: The _______ library is used to simplify sending and receiving data from a web page. <var/>  </p>
    </statement>
    <setup>
      <var>
        <condition string="urllib">
          <feedback>
            <p>The urllib library treats a web page like a file and makes it much easier to parse the page.</p>
          </feedback>
        </condition>
        <condition string=".*">
          <feedback>
            <p>Try again! What python library would be most useful for parsing a web page?</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
  <p>The equivalent code to read the <em>romeo.txt</em> file from the web
            using <c>urllib</c> is as follows:</p>
  <program xml:id="urllib1" interactive="activecode" language="python3">
    <input>
import urllib.request

fhand = urllib.request.urlopen('http://data.pr4e.org/romeo.txt')
for line in fhand:
    print(line.decode().strip())
        </input>
  </program>
  <p>Once the web page has been opened with <c>urllib.urlopen</c>, we
            can treat it like a file and read through it using a <c>for</c>
            loop.</p>
  <p>When the program runs, we only see the output of the contents of the
            file. The headers are still sent, but the <c>urllib</c> code
            consumes the headers and only returns the data to us.</p>
  <exercise label="network_retrieve_tf">
    <statement>
      <p>Q-3: True or False? The program above shows the headers and contents of the file.</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>True</p>
        </statement>
        <feedback>
          <p>Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>False</p>
        </statement>
        <feedback>
          <p>The urllib code consumes the headers and only returns the data to us - the data being the contents.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <p>As an example, we can write a program to retrieve the data for
            <c>romeo.txt</c> and compute the frequency of each word in the
            file as follows:</p>
  <program xml:id="urlwords" interactive="activecode" language="python3">
    <input>
import urllib.request, urllib.parse, urllib.error

fhand = urllib.request.urlopen('http://data.pr4e.org/romeo.txt')

counts = dict()
for line in fhand:
    words = line.decode().split()
    for word in words:
        counts[word] = counts.get(word, 0) + 1
print(counts)
        </input>
  </program>
  <p>Again, once we have opened the web page, we can read it like a local
            file.</p>
  <exercise label="network_retrieve_tf2">
    <statement>
      <p>Q-5: True or False? The urllib library opens a web page and allows it to be read like a file.</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>True</p>
        </statement>
        <feedback>
          <p>Correct! urllib makes it possible to treat a web page like a local file.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>False</p>
        </statement>
        <feedback>
          <p>Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
