<?xml version="1.0"?>
<exercises xml:id="network_multiple-choice-questions">
  <title>Multiple Choice Questions</title>
  <exercise label="networks_ex1">
    <statement>
      <p>Q-1: What  protocol can be used to retrieve web pages using python?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>urllib</p>
        </statement>
        <feedback>
          <p>urlib is a python library that contains several modules with URLs</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>bs4</p>
        </statement>
        <feedback>
          <p>bs4 is a python library pulling out data from HTML files.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>HTTP</p>
        </statement>
        <feedback>
          <p>HTTP is a network protocol that is used to transmit different documents like HTML.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>GET</p>
        </statement>
        <feedback>
          <p>GET is a HTTP request method from a specified resource in a server.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex2">
    <statement>
      <p>Q-2: What provides two way communication between two different programs in a network.</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>socket</p>
        </statement>
        <feedback>
          <p>A single socket is a program that can be used to send and receive data in a network.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>port</p>
        </statement>
        <feedback>
          <p>A port represents an endpoint on a computer that can connect to different network nodes.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>http</p>
        </statement>
        <feedback>
          <p>HTTP is a protocol used for transfer data from a web server.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>protocol</p>
        </statement>
        <feedback>
          <p>protocol is a set of rules that determine how data is transmitted over a network.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex3">
    <statement>
      <p>Q-3: What is a python library that can be used to send and receive data over HTTP?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>http</p>
        </statement>
        <feedback>
          <p>http is a protocol and not a python library</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>urllib</p>
        </statement>
        <feedback>
          <p>urllib can be used to send and receive data over HTTP instead of manually doing it using a webbrowser.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>port</p>
        </statement>
        <feedback>
          <p>port is an endpoint for a device to connect with other devices in a network to transmit similar types of data.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>header</p>
        </statement>
        <feedback>
          <p>a header is additional information sent and received along with data.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex4">
    <statement>
      <p>Q-4: What is the process by which search engines retrieve webpages and build a search index called?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>scrape</p>
        </statement>
        <feedback>
          <p>Scrape is the act of extraction of webpages</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>parse</p>
        </statement>
        <feedback>
          <p>Parse is breaking down scraped webpages to useful data</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>BeautifulSoup</p>
        </statement>
        <feedback>
          <p>BeautifulSoup is a python library for extracting HTML documents</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>spider</p>
        </statement>
        <feedback>
          <p>spider retrieves a webpage and then all the webpages linked to it to form a search index.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex5">
    <statement>
      <p>Q-5: What does the following block of code do?</p>
      <pre>mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mysock.connect(('data.pr4e.org', 80))
cmd = 'GET http://data.pr4e.org/romeo.txt HTTP/1.0\r\n\r\n'.encode()
mysock.send(cmd)</pre>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>It sends a request to extract 'romeo.txt' from 'data.pr4e.org'</p>
        </statement>
        <feedback>
          <p>this sends a GET request to the webserver over port 80</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It sends the 'romeo.txt' file to 'data.pr4e.org'</p>
        </statement>
        <feedback>
          <p>This does not send a file to the webserver.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It creates a file named 'romeo.txt'</p>
        </statement>
        <feedback>
          <p>This does not create a file</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It throws an error because a socket cannot use HTTP.</p>
        </statement>
        <feedback>
          <p>sockets can be used to connect with different types of servers using different protocols.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex6">
    <statement>
      <p>Q-6: What does the following block of code do?</p>
      <pre>import urllib.request

fhand = urllib.request.urlopen('http://data.pr4e.org/romeo.txt')
for line in fhand:
    print(line.decode().strip())</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>It creates a file named 'romeo.txt' in 'data.pr4e.org'</p>
        </statement>
        <feedback>
          <p>urllib.request cannot create files in a web server.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It finds the urls linked to 'data.pr4e.org' and prints it.</p>
        </statement>
        <feedback>
          <p>urllib.request is not a spider.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It opens a file named 'http://data.pr4e.org/romeo.txt' in local storage</p>
        </statement>
        <feedback>
          <p>urllib.request does not handle files in local storage</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>It prints the contents of 'romeo.txt' after retrieving it from 'data.pr4e.org'</p>
        </statement>
        <feedback>
          <p>urllib.request requests the file and then accepts it.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex7">
    <statement>
      <p>Q-7: What does the following block of code do?</p>
      <pre>import urllib.request, urllib.parse, urllib.error

img = urllib.request.urlopen('http://data.pr4e.org/cover3.jpg').read()
fhand = open('cover3.jpg', 'wb')
fhand.write(img)
fhand.close()</pre>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>It retrieves 'cover3.jpg' and saves it to your computer.</p>
        </statement>
        <feedback>
          <p>Running the code does not display any output because it saves the file to your computer.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It displays the image 'cover3.jpg'.</p>
        </statement>
        <feedback>
          <p>It does not output anything on the screen.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It retrieves the url to download 'cover3.jpg'</p>
        </statement>
        <feedback>
          <p>The urllib retrieves the file and parses it.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex8">
    <statement>
      <p>Q-8: What does the following regex match?</p>
      <pre>http[s]?://.+?</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Exact match to 'http[s]?://.+?'</p>
        </statement>
        <feedback>
          <p>The regex uses wildcard characters and is not an exact match case.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>'http://' or 'http[s]://' followed by one or more character</p>
        </statement>
        <feedback>
          <p>the square brackets denotes a character class with 0 or 1 's'.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>'http://' or 'https://' followed by one or more characters.</p>
        </statement>
        <feedback>
          <p>the '[s]?' means 0 or 1 s and '.+?' means 1 or more characters</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>'https://' followed by one or more characters.</p>
        </statement>
        <feedback>
          <p>the regex also accepts 'http://' because '[s]?' means 'http' followed by 0 or 1 's'</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex9">
    <statement>
      <p>Q-9: What does the following block of code do?</p>
      <pre>url = "https://www.nytimes.com"
html = urllib.request.urlopen(url, context=ctx).read()
soup = BeautifulSoup(html, 'html.parser')</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>retrieves and displays the webpage</p>
        </statement>
        <feedback>
          <p>This does not display the webpage. BeautufulSoup parses webpage retrieved by urllib.rquest</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>parses the html content of the "https://www.nytimes.com" webpage.</p>
        </statement>
        <feedback>
          <p>This parses all html tags and contents of the webpage.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>downloads the webpage</p>
        </statement>
        <feedback>
          <p>This does not save files to the computer</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="networks_ex10">
    <statement>
      <p>Q-10: What does the following block of code print?</p>
      <pre>url = "https://www.nytimes.com/"
html = urllib.request.urlopen(url).read()
soup = BeautifulSoup(html, 'html.parser')

tags = soup('img')
for tag in tags:
    print(tag.get('src', None))</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>retrieves and displays the webpage</p>
        </statement>
        <feedback>
          <p>urllib retrieves the webpage but does not display it</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>downloads the webpage</p>
        </statement>
        <feedback>
          <p>this does not save files to the computer</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>prints the images from 'www.nytimes.com'</p>
        </statement>
        <feedback>
          <p>BeautifulSoup and html.parser cannot display images</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>prints all the 'img' sources under 'src' from  'www.nytimes.com'</p>
        </statement>
        <feedback>
          <p>it prints  out the image sources listed under 'src' of 'img' tags.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</exercises>
