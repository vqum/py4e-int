<?xml version="1.0"?>
<section xml:id="turtles_single-and-multiple-turtles">
  <title>Single and Multiple Turtles</title>
  <exercise label="turtle_shape_draw_fitb">
    <statement>
      <p>csp-5-4-1: What shape will the following code draw? <var/>  </p>
    </statement>
    <setup>
      <var>
        <condition string="square">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string=".*">
          <feedback>
            <p>Try to follow the directions as if you are the turtle</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
  
      <p>Run the code to see what it draws.</p>

    <program xml:id="Turtle_shape_1_ac_editor" interactive="activecode" language="python">
      <input>
from turtle import *        # use the turtle library
space = Screen()            # create a turtle screen (space)
zari = Turtle()             # create a turtle named zari
zari.setheading(90)         # Point due north
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(90)              # turn right by 90 degrees
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(90)              # turn right by 90 degrees
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(90)              # turn right by 90 degrees
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(90)              # turn right by 90 degrees
        </input>
    </program>

  <exercise label="turtle_shape2_draw_fitb">
    <statement>
      <p>csp-5-4-3: What shape will the program below draw when you click on the Run button? <var/>  </p>
    </statement>
    <setup>
      <var>
        <condition string="triangle">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string=".*">
          <feedback>
            <p>Try to follow the directions as if you are the turtle</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
  <!--<exercise label="Turtle_Names2">
  <statement>-->
      <p>Run the code to see what it draws.</p>
  <!--</statement>-->
    <program xml:id="Turtle_Names2_editor" interactive="activecode" language="python">
      <input>
from turtle import *        # use the turtle library
space = Screen()            # create a turtle screen (space)
zari = Turtle()             # create a turtle named zari
zari.setheading(90)         # Point due north
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(120)             # turn right by 120 degrees
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(120)             # turn right by 120 degrees
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(120)             # turn right by 120 degrees
        </input>
    </program>
    <!--</exercise>-->
  <p>This works because <c>zari</c> is a turtle, and each statement gets executed, one right after the other.  If we introduce another turtle and another name, it doesn't work the same</p>
  <exercise label="Two_Turtles">
    <statement>
      <p>Run the code to see what it draws.</p>
    </statement>
    <program xml:id="Two_Turtles_editor" interactive="activecode" language="python">
      <input>
from turtle import *        # use the turtle library
space = Screen()            # create a turtle screen (space)
zari = Turtle()             # create a turtle named zari
zari.setheading(90)         # Point due north
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(120)             # turn right by 120 degrees
zari.forward(100)           # tell zari to move forward by 100 units
zari.right(120)             # turn right by 120 degrees
chad = Turtle()             # create a new turtle named chad
chad.color("orange")        # change the color chad draws with
chad.forward(100)           # tell chad to move forward by 100 units
chad.right(120)             # turn chad by 120 degrees
        </input>
    </program>
  </exercise>
  <p>Every turtle object has its own attributes like its current position and color.  So, when we created chad his position was different from zari's.  Turtles start off in the center of the drawing space when they are first created.</p>
  <p>
    <term>Mixed up programs</term>
  </p>
  <exercise label="turtle_4_2_JandT" numbered="yes" adaptive="yes" indentation="hide" language="python">
    <statement>
      <p>The following program has one turtle, <q>jamal</q>, draw a capital L in blue and then another, <q>tina</q>, draw a line to the west in orange as shown to the left.  The program should do all set-up, have <q>jamal</q> draw the L, and then have <q>tina</q> draw the line.  Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on <em>Check</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>
      <image source="turtles/Figures/TwoTurtles1N.png" width="50%"/>
    </statement>
    <blocks>
      <block order="6">
        <cline>from turtle import *</cline>
        <cline>wn = Screen()</cline>
      </block>
      <block order="5">
        <cline>jamal = Turtle()</cline>
        <cline>jamal.pensize(10)</cline>
        <cline>jamal.color("blue")</cline>
      </block>
      <block order="4">
        <choice correct="yes">
          <cline>jamal.right(90)</cline>
          <cline>jamal.forward(150)</cline>
        </choice>
        <choice>
          <cline>jamal.left(90)</cline>
          <cline>jamal.forward(150) </cline>
        </choice>
      </block>
      <block order="7">
        <choice correct="yes">
          <cline>jamal.left(90)</cline>
          <cline>jamal.forward(75)</cline>
        </choice>
        <choice>
          <cline>jamal.right(90)</cline>
          <cline>jamal.forward(75) </cline>
        </choice>
      </block>
      <block order="9">
        <choice correct="yes">
          <cline>tina = Turtle()</cline>
          <cline>tina.pensize(10)</cline>
          <cline>tina.color("orange")</cline>
        </choice>
        <choice>
          <cline>tina = Turtle()</cline>
          <cline>tina.pensize(10)</cline>
          <cline>tina.color(orange) </cline>
        </choice>
      </block>
      <block order="1">
        <cline>tina.left(180)</cline>
        <cline>tina.forward(75)</cline>
      </block>
    </blocks>
  </exercise>
  <exercise label="turtle_4_3_JandT2" numbered="yes" adaptive="yes" indentation="hide" language="python">
    <statement>
      <p>The following program has one turtle, <q>jamal</q>, draw a line to the north in blue and then another, <q>tina</q>, draw a line to the east in orange as shown to the left.  The program should import the turtle module, get the window to draw on, create the turtle <q>jamal</q>, have it draw a line to the north, then create the turtle <q>tina</q>, and have it draw a line to the east.  Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on <em>Check</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>
      <image source="turtles/Figures/TwoTurtlesLN.png" width="50%"/>
    </statement>
    <blocks>
      <block order="8">
        <choice correct="yes">
          <cline>from turtle import *</cline>
        </choice>
        <choice>
          <cline>from turtle </cline>
        </choice>
      </block>
      <block order="6">
        <cline>wn = Screen()</cline>
      </block>
      <block order="9">
        <choice correct="yes">
          <cline>jamal = Turtle()</cline>
        </choice>
        <choice>
          <cline>jamal = turtle() </cline>
        </choice>
      </block>
      <block order="7">
        <cline>jamal.color("blue")</cline>
        <cline>jamal.pensize(10)</cline>
        <cline>jamal.left(90)</cline>
        <cline>jamal.forward(150)</cline>
      </block>
      <block order="2">
        <cline>tina = Turtle()</cline>
        <cline>tina.pensize(10)</cline>
      </block>
      <block order="1">
        <choice correct="yes">
          <cline>tina.color("orange")</cline>
          <cline>tina.forward(150)</cline>
        </choice>
        <choice>
          <cline>tina.color("orange")</cline>
          <cline>tina.Forward(150) </cline>
        </choice>
      </block>
    </blocks>
  </exercise>
</section>
