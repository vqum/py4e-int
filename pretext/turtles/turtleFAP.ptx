<?xml version="1.0"?>
<section xml:id="turtles_turtle-methods">
  <title>Turtle Methods</title>
  <p>Turtles can do more than go forward, turn left, and turn right.  The table below lists the turtle methods.  Methods are functions that are defined in a class.  A class defines what all objects of the class know (the data each object keeps track of) and can do (the behaviors an object can execute).  You can think of a class as like a classification (type of thing).</p>
  <table>
    <tabular>
      <row header="yes">
        <cell>
                            Name
                        </cell>
        <cell>
                            Input
                        </cell>
        <cell>
                            Description
                        </cell>
      </row>
      <row>
        <cell>
                            backward
                        </cell>
        <cell>
                            amount
                        </cell>
        <cell>
                            Moves the turle backward by the specified amount
                        </cell>
      </row>
      <row>
        <cell>
                            color
                        </cell>
        <cell>
                            colorname
                        </cell>
        <cell>
                            Sets the pen color for drawing.  Use &#x2018;red', &#x2018;black', etc
                        </cell>
      </row>
      <row>
        <cell>
                            forward
                        </cell>
        <cell>
                            amount
                        </cell>
        <cell>
                            Moves the turtle forward by the specified amount
                        </cell>
      </row>
      <row>
        <cell>
                            goto
                        </cell>
        <cell>
                            x,y
                        </cell>
        <cell>
                            Moves the turtle to position x,y
                        </cell>
      </row>
      <row>
        <cell>
                            left
                        </cell>
        <cell>
                            angle
                        </cell>
        <cell>
                            Turns the turtle counter clockwise by the specified angle
                        </cell>
      </row>
      <row>
        <cell>
                            pendown
                        </cell>
        <cell>
                            None
                        </cell>
        <cell>
                            Puts down the turtles tail so that it draws when it moves
                        </cell>
      </row>
      <row>
        <cell>
                            penup
                        </cell>
        <cell>
                            None
                        </cell>
        <cell>
                            Picks up the turtles tail so that it doesn't draw when it moves
                        </cell>
      </row>
      <row>
        <cell>
                            pensize
                        </cell>
        <cell>
                            width
                        </cell>
        <cell>
                            Sets the width of the pen for drawing
                        </cell>
      </row>
      <row>
        <cell>
                            right
                        </cell>
        <cell>
                            angle
                        </cell>
        <cell>
                            Turns the turtle clockwise by the specified angle
                        </cell>
      </row>
      <row>
        <cell>
                            setheading
                        </cell>
        <cell>
                            angle
                        </cell>
        <cell>
                            Turns the turtle to face the given heading.  East is 0, north is 90, west is 180, and south is 270.
                        </cell>
      </row>
      <row>
        <cell>
                            Turtle
                        </cell>
        <cell>
                            None
                        </cell>
        <cell>
                            Creates and returns a new turtle object
                        </cell>
      </row>
    </tabular>
  </table>
  <p>You can draw a block style C with a turtle.  Can you draw more than one letter?  You would have to use the <c>penup()</c> procedure to pick up the pen and then move to the new location to draw the second letter and then put the pen down using <c>pendown()</c> as shown in the example below.</p>
  <exercise label="Turtle_CandL">
    <statement>
      <p>Run the code to see what it draws.</p>
    </statement>
    <program xml:id="Turtle_CandL_editor" interactive="activecode" language="python">
      <input>
from turtle import *    # use the turtle library
space = Screen()        # create a turtle space
ji = Turtle()           # create a turtle named ji
ji.right(180)           # turn right by 180 degrees
ji.forward(75)          # move forward by 75 units
ji.right(90)            # turn right 90 degrees
ji.forward(100)         # more forward by 90 units
ji.right(90)            # turn right 90 degrees
ji.forward(75)          # move forward by 75 units
ji.penup()              # pick up the pen
ji.forward(50)          # move forward 50 units
ji.pendown()            # put the pen down
ji.right(90)            # turn right 90 degrees
ji.forward(100)         # go forward 100 units
ji.left(90)             # turn left 90 degrees
ji.forward(75)          # go forward 75 units
        </input>
    </program>
  </exercise>
  <p>The space that the turtle draws in is 320 by 320 pixels.  The center of the space is at x=0, y=0.</p>
  <figure align="center" xml:id="fig_turtlefap_id1">
    <caption xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">Figure 1: The coordinates for the drawing space.  Note that the center is x = 0 and y = 0.</caption>
    <image source="turtles/Figures/spaceCoord.png" width="400px%" alt="the space coordinate system"/>
  </figure>
  <p>The program below uses the <c>goto(x,y)</c> to move to the top left corner before drawing a C.</p>
  <exercise label="Turtle_Bounds">
    <statement>
      <p>Run the code to see what it draws.</p>
    </statement>
    <program xml:id="Turtle_Bounds_editor" interactive="activecode" language="python">
      <input>
from turtle import *  # use the turtle library
space = Screen()      # create a turtle space
anu = Turtle()        # create a turtle named anu
anu.penup()           # pick up the pen (don't draw)
anu.goto(-75,150)     # go to a location
anu.pendown()         # put down the pen
anu.right(180)        # turn to face west
anu.forward(75)       # move forward by 75 units
anu.left(90)          # turn right 90 degrees
anu.forward(100)      # more forward by 90 units
anu.left(90)          # turn right 90 degrees
anu.forward(75)       # move forward by 75 units
        </input>
    </program>
  </exercise>
  <note>
    <p>Remember to put the pen down again after you have picked it up if you want to draw a line!</p>
  </note>
  <p>
    <term>Mixed up programs</term>
  </p>
  <exercise label="turtle_3_1_DrawF" numbered="yes" adaptive="yes" indentation="hide" language="python">
    <statement>
      <p>The following program uses a turtle to draw a capital F as shown in the picture below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the screen/space to draw on, and create the turtle.  It should draw the lines in the order shown by the numbers in the picture on the left. Drag the needed blocks of statements from the left column to the right column and put them in the right order.  There may be extra blocks that are not needed in a correct solution.  Then click on <em>Check</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>
      <image source="turtles/Figures/DrawFwGT.png" width="240px%"/>
    </statement>
    <blocks>
      <block order="6">
        <cline>from turtle import *</cline>
        <cline>space = Screen()</cline>
        <cline>anu = Turtle()</cline>
      </block>
      <block order="1">
        <cline>anu.left(90)</cline>
        <cline>anu.forward(100)</cline>
      </block>
      <block order="10">
        <choice correct="yes">
          <cline>anu.right(90)</cline>
          <cline>anu.forward(50)</cline>
        </choice>
        <choice>
          <cline>anu.left(90)</cline>
          <cline>anu.forward(50) </cline>
        </choice>
      </block>
      <block order="4">
        <choice correct="yes">
          <cline>anu.penup()</cline>
        </choice>
        <choice>
          <cline>anu.penUp() </cline>
        </choice>
      </block>
      <block order="2">
        <choice correct="yes">
          <cline>anu.goto(0,60)</cline>
        </choice>
        <choice>
          <cline>anu.goTo(0,60) </cline>
        </choice>
      </block>
      <block order="5">
        <choice correct="yes">
          <cline>anu.pendown()</cline>
        </choice>
        <choice>
          <cline>anu.penDown() </cline>
        </choice>
      </block>
      <block order="7">
        <cline>anu.forward(50)</cline>
      </block>
    </blocks>
  </exercise>
  <exercise label="turtle_3_2_DrawA" numbered="yes" adaptive="yes" indentation="hide" language="python">
    <statement>
      <p>The following program uses a turtle to draw a capital A as shown in the picture below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the screen/space to draw on, and create the turtle.  It should draw the lines in the order shown by the numbers in the picture on the left. Drag the needed blocks of statements from the left column to the right column and put them in the right order. There may be additional blocks that are not needed in a correct solution. Then click on <em>Check</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>
      <image source="turtles/Figures/DrawABig.png" width="240px%"/>
    </statement>
    <blocks>
      <block order="9">
        <cline>from turtle import *</cline>
      </block>
      <block order="5">
        <choice correct="yes">
          <cline>space = Screen()</cline>
        </choice>
        <choice>
          <cline>space = screen() </cline>
        </choice>
      </block>
      <block order="8">
        <choice correct="yes">
          <cline>ella = Turtle()</cline>
        </choice>
        <choice>
          <cline>ella = Turtle </cline>
        </choice>
      </block>
      <block order="7">
        <choice correct="yes">
          <cline>ella.left(60)</cline>
          <cline>ella.forward(100)</cline>
        </choice>
        <choice>
          <cline>ella.left(60)</cline>
          <cline>ella.forward() </cline>
        </choice>
      </block>
      <block order="11">
        <cline>ella.right(120)</cline>
        <cline>ella.forward(100)</cline>
      </block>
      <block order="3">
        <cline>ella.penup()</cline>
        <cline>ella.goto(30,50)</cline>
        <cline>ella.pendown()</cline>
      </block>
      <block order="4">
        <choice correct="yes">
          <cline>ella.left(60)</cline>
          <cline>ella.forward(40)</cline>
        </choice>
        <choice>
          <cline>ella.Left(60)</cline>
          <cline>ella.forward(40) </cline>
        </choice>
      </block>
    </blocks>
  </exercise>
  <p>You can change the color and pensize that you draw with as well.</p>
  <exercise label="Turtle_Color">
    <statement>
      <p>Run the code to see what it draws.</p>
    </statement>
    <program xml:id="Turtle_Color_editor" interactive="activecode" language="python">
      <input>
from turtle import *   # use the turtle library
space = Screen()       # create a turtle space
anu = Turtle()         # create a turtle named anu
anu.color('red')       # set the pen color to red
anu.pensize(25)        # set the size of the pen
anu.right(180)         # turn right by 180 degrees
anu.forward(75)        # move forward by 75 units
anu.right(90)          # turn right 90 degrees
anu.color('blue')      # set the pen color to blue
anu.pensize(50)        # set the pen size to 10
anu.forward(100)       # move forward by 100 units
        </input>
    </program>
  </exercise>
  <exercise label="Turtle_Initials">
    <statement>
      <p>Use the area below to try to draw to draw your initials in block style with two different colors.</p>
    </statement>
    <program xml:id="Turtle_Initials_editor" interactive="activecode" language="python">
      <input>

        </input>
    </program>
  </exercise>
</section>
