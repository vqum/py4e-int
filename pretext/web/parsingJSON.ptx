<?xml version="1.0"?>
<section xml:id="web_what-is-json">
  <title>What is JSON?</title>
  <introduction>
  <p>JSON stands for JavaScript Object Notation.  It is a format for sharing data.
            You can read a JSON string from a file or from a URL and convert it into a Python dictionary or list.
            You can also convert a Python dictionary or list into a JSON string.</p>
        </introduction>
  <subsection xml:id="web_converting-a-json-string-into-a-python-object">
    <title>Converting a JSON String into a Python Object</title>
<idx>JSON</idx>
    <p>In the following program, we use the built-in <c>json</c>
                library to parse the JSON string and return a Python list of dictionaries.</p>
    <exercise label="web-parse-json-to-python">
      <statement>
        <p>What do you think this code will print?  Run it to see what it actually
                prints.</p>
      </statement>
      <program xml:id="web-parse-json-to-python_editor" interactive="activecode" language="python">
        <input>
import json

data = '''
[
  { "id" : "001",
   "x" : "2",
   "name" : "Chuck"
  } ,
  { "id" : "009",
   "x" : "7",
   "name" : "Brenda"
  }
]'''

info = json.loads(data)
print('User count:', len(info))

for item in info:
    print('Name', item['name'])
    print('Id', item['id'])
    print('Attribute', item['x'])
        </input>
      </program>
    </exercise>
    <exercise label="net_parse_xml_which_method">
      <statement>
        <p>csp-10-2-2: Which method of the json library is used to convert a JSON string into a Python object? <var/>  </p>
      </statement>
      <setup>
        <var>
          <condition string="loads">
            <feedback>
              <p>The loads method takes a JSON string and returns a list or dictionary.</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>Which method was called in the code above?</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
    <p>Here is another example.  Run the code to see what it does.</p>
    <exercise label="web-parse-json-to-python-dictionary">
      <statement>
        <p>What do you think this code will print?  Run it to see what it actually
                prints.</p>
      </statement>
      <program xml:id="web-parse-json-to-python-dictionary_editor" interactive="activecode" language="python">
        <input>
import json
data = '''{"employees": [{"name": "Lena", "title": "sales person"},
                     {"name": "Paru", "title": "manager"},
                     {"name": "Tyra", "title": "vice president"}]}'''
d1 = json.loads(data)
people_list = d1["employees"]
print(len(people_list))
for person in people_list:
    print(person.get('name'))
        </input>
      </program>
    </exercise>
    <exercise label="net_json_what_type_returned_data">
      <statement>
        <p>csp-10-2-4: What type of thing (class name) is <c>data</c> in the code above? <var/>  </p>
      </statement>
      <setup>
        <var>
          <condition string="str|string">
            <feedback>
              <p>It is an object of the str (string) class</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>Try again</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
    <exercise label="net_json_what_type_returned_d1">
      <statement>
        <p>csp-10-2-5: What type of thing (class name) is <c>d1</c> in the code above? <var/>  </p>
      </statement>
      <setup>
        <var>
          <condition string="dict|dictionary">
            <feedback>
              <p>It is an object of the dict (dictionary) class.</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>Try again</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
    <exercise label="webParsingJSON_MC_construct">
      <statement>
        <p>csp-10-2-6: Once you convert a JSON string to Python what are the two possible types for the Python object?</p>
      </statement>
      <choices>
        <choice>
          <statement>
            <p>dictionary and string</p>
          </statement>
          <feedback>
            <p>Dictionaries are used in JSON, but strings only contain one element, so they are not as useful.</p>
          </feedback>
        </choice>
        <choice correct="yes">
          <statement>
            <p>dictionary and list</p>
          </statement>
          <feedback>
            <p>JSON is constructed by nesting dictionaries and lists as needed.</p>
          </feedback>
        </choice>
        <choice>
          <statement>
            <p>string and list</p>
          </statement>
          <feedback>
            <p>Lists are used in JSON, but strings only contain one element, so they are not as useful.</p>
          </feedback>
        </choice>
      </choices>
    </exercise>
  </subsection>
  <subsection xml:id="web_converting-a-python-object-into-a-json-string">
    <title>Converting a Python object into a JSON string</title>
    <p>You can also convert a Python list or dictionary to a JSON string.</p>
    <exercise label="web-parse-json-to-string">
      <statement>
        <p>What do you think this code will print?  Run it to see what it actually
                prints.</p>
      </statement>
      <program xml:id="web-parse-json-to-string_editor" interactive="activecode" language="python">
        <input>
import json
d_list = [{'Year': 2022, 'First': 'Barb', 'Last': 'Ericson'}, {'Year': 2018, 'First': 'Mark', 'Last': 'Guzdial'}]
print(json.dumps(d_list))
d = d_list[0]
print(json.dumps(d))
        </input>
      </program>
    </exercise>
    <exercise label="net_parse_json_convert_to_string_fitb">
      <statement>
        <p>csp-10-2-8: Which method of the json library is used to convert a Python object to a JSON string? <var/>  </p>
      </statement>
      <setup>
        <var>
          <condition string="dumps">
            <feedback>
              <p>The dumps method takes a Python object and returns a JSON string.</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>Which method was called in the code above?</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
  </subsection>
</section>
