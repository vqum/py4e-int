<?xml version="1.0"?>
<section xml:id="functions_type-conversion-functions">
  <title>Type conversion functions</title>
<idx><h>Conversion</h><h>Type</h></idx>
<idx><h>Type</h><h>Conversion</h></idx>
<idx><h>Function</h><h>Int</h></idx>
<idx><h>Int</h><h>Function</h></idx>
<idx><h>Function</h><h>Float</h></idx>
<idx><h>Float</h><h>Function</h></idx>
<idx><h>Function</h><h>String</h></idx>
<idx><h>String</h><h>Function</h></idx>
  <p>Python also provides built-in functions that convert values from one
            type to another. The <c>int</c> function takes any value and
            converts it to an integer, if it can, or complains otherwise:</p>
  <program xml:id="functType_int" interactive="activecode" language="python">
    <input>
print(int('32'))
print(int('Hello'))
        </input>
  </program>
  <exercise label="functType_MC_error">
    <statement>
      <p>Q-2: Why would we get an error in the following code block?</p>
      <program language="python">
        <input>
print(int('32'))
print(int('Hello'))
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>When converting a string to an int, we must remove the quotation marks.</p>
        </statement>
        <feedback>
          <p>Incorrect! This would only work if Hello was a variable name with a value of the correct type. For example, Hello = '32'. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>The int function is expecting a value that can be converted to an integer.</p>
        </statement>
        <feedback>
          <p>Correct! The int function expects a value that can be converted and strings cannot be converted to integers.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>We cannot print and call a function in the same line.</p>
        </statement>
        <feedback>
          <p>Incorrect! This is actually possible &#x2014; it worked with the first line. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <p><c>int</c> can convert floating-point values to integers, but it
            doesn't round them &#x2014; it chops off the fraction part (this is called <q>truncating</q>):</p>
  <program xml:id="functType_noFloat" interactive="activecode" language="python">
    <input>
print(int(3.99999))
print(int(-2.3))
        </input>
  </program>
  <p><c>float</c> converts integers and strings to floating-point
            numbers:</p>
  <program xml:id="functType_float" interactive="activecode" language="python">
    <input>
print(float(32))
print(float('3.14159'))
        </input>
  </program>
  <p>Finally, <c>str</c> converts its argument to a string:</p>
  <program xml:id="functType_str" interactive="activecode" language="python">
    <input>
print(str(32))
print(str(3.14159))
        </input>
  </program>
  <exercise label="functType_fill1">
    <statement>
      <p>Q-6: The _______ function takes any value and converts it to a floating-point number. <var/>  </p>
    </statement>
    <setup>
      <var>
        <condition string="float">
          <feedback>
            <p>Correct! The float function takes any value and converts it to a floating point number.</p>
          </feedback>
        </condition>
        <condition string=".*">
          <feedback>
            <p>Incorrect! The function has an intuitive name. Try again.</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
  <exercise label="functType_MC_int">
    <statement>
      <p>Q-7: Consider the code below. What prints?</p>
      <program language="python">
        <input>
print(int(23.865))
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>23</p>
        </statement>
        <feedback>
          <p>Correct! The int function will truncate the float when it converts it to an integer.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>24</p>
        </statement>
        <feedback>
          <p>Incorrect! The int function doesn't round up. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>2</p>
        </statement>
        <feedback>
          <p>Incorrect! The int function doesn't only convert the first digit. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>23.8</p>
        </statement>
        <feedback>
          <p>Incorrect! The int function doesn't keep any of the decimal places. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="functType_MC_float">
    <statement>
      <p>Q-8: Consider the code below. What prints?</p>
      <program language="python">
        <input>
print(float(23))
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>24.0</p>
        </statement>
        <feedback>
          <p>Incorrect! The float function will be the same value as the integer. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>2.3</p>
        </statement>
        <feedback>
          <p>Incorrect! The float function will not split a multi-digit integer. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>23.0</p>
        </statement>
        <feedback>
          <p>The float function will add ".0" to the end of an integer, turning it into a floating point number.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>23</p>
        </statement>
        <feedback>
          <p>Incorrect! Floating point numbers have a decimal point in them. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
