<?xml version="1.0"?>
<section xml:id="functions_peer-instruction-functions-multiple-choice-questions">
  <title>Peer Instruction: Functions Multiple Choice Questions</title>
  <exercise label="ctp-functions-08_Functions_07">
    <statement>
      <p>Q-1: What does the following code print?</p>
      <program language="python">
        <input>
def foo():
        print("Raaarrr I'm a bear")

def bar():
        print("Eeek a bear!")

foo()
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>Raaarrr I'm a bear</p>
        </statement>
        <feedback>
          <p>Correct! The function "foo()" has been called in the last line. So, the print statement under it will be executed.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Eeek a bear!</p>
        </statement>
        <feedback>
          <p>Incorrect! The function "foo()" has been called in the last line and NOT "bar()". So, the print statement under "foo()" will be executed and returned.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Both</p>
        </statement>
        <feedback>
          <p>Incorrect! The function "foo()" has been called in the last line and NOT "bar()". So, the print statement under "foo()" will be executed and returned.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Neither</p>
        </statement>
        <feedback>
          <p>Incorrect! The function "foo()" has been called in the last line and NOT "bar()". So, the print statement under "foo()" will be executed and returned.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>I don't know</p>
        </statement>
        <feedback>
          <p>Incorrect! The function "foo()" has been called in the last line and NOT "bar()". So, the print statement under "foo()" will be executed and returned.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="ctp-functions-08_Functions_10">
    <statement>
      <p>Q-2: What does the following code print?</p>
      <program language="python">
        <input>
def first(a):
   a=8

a = 20
first(a)
print(a)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>0</p>
        </statement>
        <feedback>
          <p>Incorrect! Change in the values of a function's arguments doesn't change the assigned value of a variable. Try replacing "first(a)" with "first(x)" in function definition.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>8</p>
        </statement>
        <feedback>
          <p>Incorrect! Change in the values of a function's arguments doesn't change the assigned value of a variable. Try replacing "first(a)" with "first(x)" in function definition.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>20</p>
        </statement>
        <feedback>
          <p>Correct! Change in the values of a function's arguments doesn't change the assigned value of a variable.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error, because a cannot be assigned in two places</p>
        </statement>
        <feedback>
          <p>Incorrect! Change in the value of a function's arguments doesn't change the assigned value of a variable. Try replacing "first(a)" with "first(x)" in function definition.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>I don't know</p>
        </statement>
        <feedback>
          <p>Incorrect! Change in the values of a function's arguments doesn't change the assigned value of a variable. Try replacing "first(a)" with "first(x)" in function definition.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="ctp-functions-08_Functions_13">
    <statement>
      <p>Q-3: What does the following code print?</p>
      <program language="python">
        <input>
def calculate(w, x, y):
   a=x
   b=w+1
   return a + b + 3

print(calculate(3, 2, 0))
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>5</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, a=x=2 and b= 3+1 = 4. So, a + b + 3 = 2 + 4 + 3 = 9.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>9</p>
        </statement>
        <feedback>
          <p>Correct! Here, a=x=2 and b= 3+1 = 4. So, a + b + 3 = 2 + 4 + 3 = 9.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>0</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, a=x=2 and b= 3+1 = 4. So, a + b + 3 = 2 + 4 + 3 = 9.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>3</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, a=x=2 and b= 3+1 = 4. So, a + b + 3 = 2 + 4 + 3 = 9.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>I don't know</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, a=x=2 and b= 3+1 = 4. So, a + b + 3 = 2 + 4 + 3 = 9.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="ctp-functions-08_Functions_14">
    <statement>
      <p>Q-4: Which sets <c>x</c> to the value 5?</p>
      <program language="python">
        <input>
def f1():
   return 5

def f2():
   print(5)

def f3():
   return print(5)
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>x = f1()</p>
        </statement>
        <feedback>
          <p>Correct! Only function "f1()" has a return statement.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>x = f2()</p>
        </statement>
        <feedback>
          <p>Incorrect! Only function "f1()" has a return statement.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>x = f3()</p>
        </statement>
        <feedback>
          <p>Incorrect! Only function "f1()" has a return statement.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>All of the above</p>
        </statement>
        <feedback>
          <p>Incorrect! Only function "f1()" has a return statement.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>I don't know</p>
        </statement>
        <feedback>
          <p>Incorrect! Only function "f1()" has a return statement.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="ctp-functions-08_Functions_15">
    <statement>
      <p>Q-5: Which of the following are true about this code?</p>
      <program language="python">
        <input>
def add_one(x):
return x + 1

x = 2
x = x + add_one(x)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>No bugs. The code is fine.</p>
        </statement>
        <feedback>
          <p>Incorrect! Body of the function is not indented.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>The function body is not indented.</p>
        </statement>
        <feedback>
          <p>Correct! Function body should be indented in Python.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>We use x as both a parameter and a variable, but we are not allowed to do that</p>
        </statement>
        <feedback>
          <p>Incorrect! x can be defined as both a parameter and variable in Python.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>B and C</p>
        </statement>
        <feedback>
          <p>Incorrect! Function body should be indented in Python. x can be defined as both a parameter and variable in Python.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>I don't know</p>
        </statement>
        <feedback>
          <p>Incorrect! Body of the function is not indented.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="ctp-functions-08_Functions_16">
    <statement>
      <p>Q-6: What does the following code print?</p>
      <program language="python">
        <input>
def odd(y,x):
   y = y +1
   x = x + 1
   print(x*y)

def main():
   x = 2
   y = 4
   odd(x,y)
   print(x*y)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>8, 8</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, odd(4, 2) will return 15 (y = y + 1 = 5 and x = x + 1 = 3) and print(x*y) in main() will return 8. The output of odd() will be printed first as it is initialized first.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>15, 15</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, odd(4, 2) will return 15 (y = y + 1 = 5 and x = x + 1 = 3) and print(x*y) in main() will return 8. The output of odd() will be printed first as it is initialized first.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>8, 15</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, odd(4, 2) will return 15 (y = y + 1 = 5 and x = x + 1 = 3) and print(x*y) in main() will return 8. The output of odd() will be printed first as it is initialized first.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>15, 8</p>
        </statement>
        <feedback>
          <p>Correct! Here, odd(4, 2) will return 15 (y = y + 1 = 5 and x = x + 1 = 3) and print(x*y) in main() will return 8. The output of odd() will be printed first as it is initialized first.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>I don't know</p>
        </statement>
        <feedback>
          <p>Incorrect! Here, odd(4, 2) will return 15 (y = y + 1 = 5 and x = x + 1 = 3) and print(x*y) in main() will return 8. The output of odd() will be printed first as it is initialized first.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_6_4">
    <statement>
      <p>Q-7: One of the components of this function is inconsistent with the rest. Which is it?</p>
      <program language="python">
        <input>
def sum_eleven(num1, num2, num3):
   '''(int, int, int) -&gt; bool
   Return True iff num1, num2, and num3 sum to 11.
   &gt;&gt;&gt;sum_eleven (4, 5, 2)
   11
   '''
   return num1 + num2 + num3 == 11
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>Example</p>
        </statement>
        <feedback>
          <p>Correct! The function returns a boolean but the example returns an integer.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Type contract</p>
        </statement>
        <feedback>
          <p>Incorrect! The name and type of parameters have been clearly defined. Option A is the answer becauase the function returns a boolean but the example returns an integer.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Header</p>
        </statement>
        <feedback>
          <p>Incorrect! The syntax of function's header is correct. Option A is the answer becauase the function returns a boolean but the example returns an integer.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Description</p>
        </statement>
        <feedback>
          <p>Incorrect! The function has been clearly descibed. Option A is the answer becauase the function returns a boolean but the example returns an integer.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Body</p>
        </statement>
        <feedback>
          <p>Incorrect! The body of the function has been defined accurately. Option A is the answer becauase the function returns a boolean but the example returns an integer.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_6_5">
    <statement>
      <p>Q-8: One of the components of this function is inconsistent with the rest. Which is it?</p>
      <program language="python">
        <input>
def rightmost_digit(a):
   '''(int) -&gt; bool
   Return the rightmost digit of a.
   &gt;&gt;&gt;rightmost_digit (14)
   4
   '''
   return a % 10
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Example</p>
        </statement>
        <feedback>
          <p>Incorrect! The example has been correctly defined. Option B is right because the function returns an integer but the type of contract indicates bool.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Type contract</p>
        </statement>
        <feedback>
          <p>Correct! Option B is right because the function returns an integer but the type of contract indicates bool.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Header</p>
        </statement>
        <feedback>
          <p>Incorrect! The syntax of function's header is correct. Option B is right because the function returns an integer but the type of contract indicates bool.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Description</p>
        </statement>
        <feedback>
          <p>Incorrect! The function has been clearly descibed. Option B is right because the function returns an integer but the type of contract indicates bool.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Body</p>
        </statement>
        <feedback>
          <p>Incorrect! The body of the function has been defined accurately. Option B is right because the function returns an integer but the type of contract indicates bool.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_6_8">
    <statement>
      <p>Q-9: At a pizzeria, adults order two slices, boys order three slices, and girls order one slice. Each pizza has eight slices. Write a function that takes three parameters representing the number of adults, boys, and girls, and returns the required number of pizzas. Which example is correct?</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>&gt;&gt;&gt; num_pizzas(1, 2, 3)   2</p>
        </statement>
        <feedback>
          <p>Correct! The group will need atleast 11 slices. Since each pizza has 8 slices, the group would need atleast 2 pizzas.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>&gt;&gt;&gt; num_pizzas(1, 2, 3)   1</p>
        </statement>
        <feedback>
          <p>Incorrect! The group will need atleast 11 slices. Since each pizza has 8 slices, the group would need atleast 2 pizzas.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>&gt;&gt;&gt; num_pizzas(1, 2, 3)   9</p>
        </statement>
        <feedback>
          <p>Incorrect! The group will need atleast 11 slices. Since each pizza has 8 slices, the group would need atleast 2 pizzas.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>&gt;&gt;&gt; num_pizzas(1, 2, 3)   6</p>
        </statement>
        <feedback>
          <p>Incorrect! The group will need atleast 11 slices. Since each pizza has 8 slices, the group would need atleast 2 pizzas.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
