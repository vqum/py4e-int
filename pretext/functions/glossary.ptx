<?xml version="1.0"?>
<section xml:id="functions_glossary">
  <title>Glossary</title>
  <glossary sorted="False">
    <gi>
      <title>Algorithm</title>
      <p>A general process for solving a category of problems.</p>
    </gi>
    <gi>
      <title>Argument</title>
      <p>A value provided to a function when the function is called. This value is assigned to the
                            corresponding parameter in the function.</p>
    </gi>
    <gi>
      <title>Function Body</title>
      <p>The sequence of statements inside a function definition.</p>
    </gi>
    <gi>
      <title>Composition</title>
      <p>Using an expression as part of a larger expression, or a statement as part of a larger statement.</p>
    </gi>
    <gi>
      <title>Deterministic</title>
      <p>Pertaining to a program that does the same thing each time it runs given the same inputs.</p>
    </gi>
    <gi>
      <title>Dot Notation</title>
      <p>The syntax for calling a function in another module by specifying the module name followed by
                            a dot (period) and the function name.</p>
    </gi>
    <gi>
      <title>Flow of Execution</title>
      <p>The order in which statements are executed during a program run.</p>
    </gi>
    <gi>
      <title>Fruitful Function</title>
      <p>A function that returns a value.</p>
    </gi>
    <gi>
      <title>Function</title>
      <p>A named sequence of statements that performs some useful operation. Functions may or may not take
                            arguments and may or may not return a value.</p>
    </gi>
    <gi>
      <title>Function Call</title>
      <p>A statement that executes a function. It consists of the function name followed by an argument list.</p>
    </gi>
    <gi>
      <title>Function Object</title>
      <p>A value created by a function definition. The name of the function is a variable that refers to a
                            function object.</p>
    </gi>
    <gi>
      <title>Header</title>
      <p>The first line of a function definition.</p>
    </gi>
    <gi>
      <title>Import Statement</title>
      <p>A statement that reads a module file and creates a module object.</p>
    </gi>
    <gi>
      <title>Module Object</title>
      <p>A value created by an import statement that provides access to the data and code defined in a module.</p>
    </gi>
    <gi>
      <title>Parameter</title>
      <p>A name used inside a function to refer to the value passed as an argument.</p>
    </gi>
    <gi>
      <title>Pseudorandom</title>
      <p>Pertaining to a sequence of numbers that appear to be random, but are generated by a deterministic
                            program.</p>
    </gi>
    <gi>
      <title>Return Value</title>
      <p>The result of a function. If a function call is used as an expression, the return value is the
                            value of the expression.</p>
    </gi>
    <gi>
      <title>Void Function</title>
      <p>A function that does not have a return value.</p>
    </gi>
  </glossary>
  <exercise label="funct_glossary_one">
    <statement>
      <p>Match the terms on the left with their defintions on the right.</p>
    </statement>
    <feedback>
      <p>If you're stuck, look above for the definitions of these terms! Try again.</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>algorithm</premise>
        <response>A general process for solving a category of problems.</response>
      </match>
      <match order="2">
        <premise>argument</premise>
        <response>A value provided to a function when the function is called. This value is assigned to the corresponding parameter in the function.</response>
      </match>
      <match order="3">
        <premise>body</premise>
        <response>The sequence of statements inside a function definition.</response>
      </match>
      <match order="4">
        <premise>composition</premise>
        <response>Using an expression as part of a larger expression, or a statement as part of a larger statement.</response>
      </match>
      <match order="5">
        <premise>deterministic</premise>
        <response>Pertaining to a program that does the same thing each time it runs, given the same inputs.</response>
      </match>
    </matches>
  </exercise>
  <exercise label="funct_glossary_two">
    <statement>
      <p>Match the terms on the left with their defintions on the right.</p>
    </statement>
    <feedback>
      <p>If you're stuck, look above for the definitions of these terms! Try again.</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>dot notation</premise>
        <response>The syntax for calling a function in another module by specifying the module name followed by a dot (period) and the function name.</response>
      </match>
      <match order="2">
        <premise>flow of execution</premise>
        <response>The order in which statements are executed during a program run.</response>
      </match>
      <match order="3">
        <premise>fruitful function</premise>
        <response>A function that returns a value.</response>
      </match>
      <match order="4">
        <premise>function</premise>
        <response>A named sequence of statements that performs some useful operation.</response>
      </match>
      <match order="5">
        <premise>function call</premise>
        <response>A statement that executes a function.</response>
      </match>
    </matches>
  </exercise>
  <exercise label="funct_glossary_three">
    <statement>
      <p>Match the terms on the left with their defintions on the right.</p>
    </statement>
    <feedback>
      <p>If you're stuck, look above for the definitions of these terms! Try again.</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>function definition</premise>
        <response>A statement that creates a new function, specifying its name, parameters, and the statements it executes.</response>
      </match>
      <match order="2">
        <premise>function object</premise>
        <response>A value created by a function definition.</response>
      </match>
      <match order="3">
        <premise>header</premise>
        <response>The first line of a function definition.</response>
      </match>
      <match order="4">
        <premise>import statement</premise>
        <response>A statement that reads a module file and creates a module object.</response>
      </match>
      <match order="5">
        <premise>module object</premise>
        <response>A value created by an ``import`` statement that provides access to the data and code defined in a module.</response>
      </match>
    </matches>
  </exercise>
  <exercise label="funct_glossary_four">
    <statement>
      <p>Match the terms on the left with their defintions on the right.</p>
    </statement>
    <feedback>
      <p>If you're stuck, look above for the definitions of these terms! Try again.</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>parameter</premise>
        <response>A name used inside a function to refer to the value passed as an argument.</response>
      </match>
      <match order="2">
        <premise>pseudorandom</premise>
        <response>Pertaining to a sequence of numbers that appear to be random, but are generated by a deterministic program.</response>
      </match>
      <match order="3">
        <premise>return value</premise>
        <response>The result of a function.</response>
      </match>
      <match order="4">
        <premise>void function</premise>
        <response>A function that does not return a value.</response>
      </match>
    </matches>
  </exercise>
</section>
