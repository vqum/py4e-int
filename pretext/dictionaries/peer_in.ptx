<?xml version="1.0"?>
<section xml:id="dictionaries_peer-instruction-dictionaries-multiple-choice-questions">
  <title>Peer Instruction: Dictionaries Multiple Choice Questions</title>
  <exercise label="dz-lecture_18_2">
    <statement>
      <p>Q-1: Which of the following is best suited for a dictionary instead of a list?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>The order in which people finish a race</p>
        </statement>
        <feedback>
          <p>Incorrect! A list sorted in increasing order can used for this.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>The ingredients necessary for a recipe</p>
        </statement>
        <feedback>
          <p>Incorrect! A list can be used for listing down the ingredients for a recipe</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>The names of world countries and their capital cities</p>
        </statement>
        <feedback>
          <p>Correct! This requires a key-value pair i.e. country-capital and is thus best suited for dictionary.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>50 random integers</p>
        </statement>
        <feedback>
          <p>Incorrect! A list would be more suitable for 50 random integers.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_18_4">
    <statement>
      <p>Q-2: What code should go in place of the missing code?</p>
      <program language="python">
        <input>
def new_sighting(kinds, counts, sighting):
   '''(list of str, list of int, str) -&gt; NoneType
   Add new sighting to parallel lists kinds and counts.
   '''
   if sighting not in kinds:
      kinds.append(sighting)
      ... missing code
   ind = kinds.index(sighting)
   counts[ind] = counts[ind] + 1
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>counts.append(0)</p>
        </statement>
        <feedback>
          <p>Correct! Since a new bird sighting has been appended into "kinds", its count has to be appended to the end of "counts" too. The last two lines irrespective of the if condition increment the corresponding count of a sighting by 1. So, the missing code needs to append 0 to "counts".</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>counts.append(1)</p>
        </statement>
        <feedback>
          <p>Incorrect! Since a new bird sighting has been appended into "kinds", its count has to be appended to the end of "counts" too. The last two lines irrespective of the if condition increment the corresponding count of a sighting by 1. So, the missing code needs to append 0 to "counts".</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>counts.append(kind)</p>
        </statement>
        <feedback>
          <p>Incorrect! Since a new bird sighting has been appended into "kinds", its count has to be appended to the end of "counts" too. The last two lines irrespective of the if condition increment the corresponding count of a sighting by 1. So, the missing code needs to append 0 to "counts".</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>No code necessary there</p>
        </statement>
        <feedback>
          <p>Incorrect! Since a new bird sighting has been appended into "kinds", its count has to be appended to the end of "counts" too. The last two lines irrespective of the if condition increment the corresponding count of a sighting by 1. So, the missing code needs to append 0 to "counts".</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_18_8">
    <statement>
      <p>Q-3: What is dictionary d created by the following code?</p>
      <program language="python">
        <input>
d = {3:4}
d[5] = d.get(4, 8)
d[4] = d.get(3, 9)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>{3:4, 5:8, 4:9}</p>
        </statement>
        <feedback>
          <p>Incorrect! Both d[5] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(4, 8) = 8 as there exists no key = '4' in dictionary d. d.get(3,9) returns 4 as this value corresponds to key = '3'.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>{3:4, 5:8, 4:4}</p>
        </statement>
        <feedback>
          <p>Correct! Both d[5] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(4, 8) = 8 as there exists no key = '4' in dictionary d. d.get(3,9) returns 4 as this value corresponds to key = '3'.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{3:4, 5:4, 4:3}</p>
        </statement>
        <feedback>
          <p>Incorrect! Both d[5] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(4, 8) = 8 as there exists no key = '4' in dictionary d. d.get(3,9) returns 4 as this value corresponds to key = '3'.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error caused by get</p>
        </statement>
        <feedback>
          <p>Incorrect! Both d[5] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(4, 8) = 8 as there exists no key = '4' in dictionary d. d.get(3,9) returns 4 as this value corresponds to key = '3'.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_18_9">
    <statement>
      <p>Q-4: What is dictionary d created by the following code?</p>
      <program language="python">
        <input>
d = {1:5}
d[2] = d.get(1, 6)
d[4] = d.get(3, 7)
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>{1:5, 2:5, 4:7}</p>
        </statement>
        <feedback>
          <p>Correct! Both d[2] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(1,6) returns 5 as this value corresponds to key = '1'. d.get(3, 7) = 7 as there exists no key = '3' in dictionary d.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{1:5, 2:6, 4:7}</p>
        </statement>
        <feedback>
          <p>Incorrect! Both d[2] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(1,6) returns 5 as this value corresponds to key = '1'. d.get(3, 7) = 7 as there exists no key = '3' in dictionary d.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{1:5, 2:1, 4:2}</p>
        </statement>
        <feedback>
          <p>Incorrect! Both d[2] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(1,6) returns 5 as this value corresponds to key = '1'. d.get(3, 7) = 7 as there exists no key = '3' in dictionary d.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error caused by get</p>
        </statement>
        <feedback>
          <p>Incorrect! Both d[2] =  and d[4] =  adds new keys to the dictionary with values returned by d.get(). d.get(1,6) returns 5 as this value corresponds to key = '1'. d.get(3, 7) = 7 as there exists no key = '3' in dictionary d.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_19_2">
    <statement>
      <p>Q-5: Which of the following is a difference between lists and dictionaries?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>List elements cannot be mutable, but dictionary values can be mutable</p>
        </statement>
        <feedback>
          <p>Incorrect!</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Assigning to an index that does not exist in a list is an error, but assigning a value to a key that does not exist in a dictionary is not</p>
        </statement>
        <feedback>
          <p>Correct!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>A list can contain a dictionary as one of its elements, but a dictionary cannot contain a list as one of its values</p>
        </statement>
        <feedback>
          <p>Incorrect!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>There is a dict constructor that creates a dictionary from a suitable object, but there is no list constructor that similarly creates lists</p>
        </statement>
        <feedback>
          <p>Incorrect!</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_19_6">
    <statement>
      <p>Q-6: What is the best inversion of this dictionary?</p>
      <program language="python">
        <input>
{1:4, 2:5, 4:5}
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>{4:1, 5:[2,4]}</p>
        </statement>
        <feedback>
          <p>Incorrect! Options A and C are equally good as 4:1 can also be represented as 4:[1].</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{4:[1], 5:[4,2]}</p>
        </statement>
        <feedback>
          <p>Incorrect! Options A and C are equally good. 5:[4,2] is not correct as dictionaries are ordered and 2 appears before 4.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{4:[1], 5:[2,4]}</p>
        </statement>
        <feedback>
          <p>Incorrect! Options A and C are equally good as 4:1 can also be represented as 4:[1].</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Two of the above are equally good</p>
        </statement>
        <feedback>
          <p>Correct! Options A and C are equally good as 4:1 can also be represented as 4:[1].</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>All of the above are equally good</p>
        </statement>
        <feedback>
          <p>Incorrect! Options A and C are equally good. 5:[4,2] is not correct as dictionaries are ordered and 2 appears before 4.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_19_7">
    <statement>
      <p>Q-7: Here is a birthday month dictionary. Which month has the most coverage I.e., the month with the most days on which someone has a birthday?</p>
      <program language="python">
        <input>
{"December" : {24 : ["Dan", "Joe", "Steph"]},
 "July" : {17 : ["Angelo"],
          16 : ["Chris"],
          1 : ["Canada"]
          }
}
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>December</p>
        </statement>
        <feedback>
          <p>Incorrect! July has the most number of days when someone has a birthday i.e. 3. December has just 1 such day.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>July</p>
        </statement>
        <feedback>
          <p>Correct! July has the most number of days when someone has a birthday i.e. 3. December has just 1 such day.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Both July and December are equally covered</p>
        </statement>
        <feedback>
          <p>Incorrect! July has the most number of days when someone has a birthday i.e. 3. December has just 1 such day.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_19_8">
    <statement>
      <p>Q-8: Here is a birthday month dictionary. Which month has the most coverage I.e., the month with the most days on which someone has a birthday?</p>
      <program language="python">
        <input>
{"December" : {24 : ["Dan", "Joe"], 23 : ["Steph"]},
"July" : {17 : ["Angelo"], 16 : ["Chris"]}}
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>December</p>
        </statement>
        <feedback>
          <p>Incorrect! July and December are equally covered i.e. 2 days.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>July</p>
        </statement>
        <feedback>
          <p>Incorrect! July and December are equally covered i.e. 2 days.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Both July and December are equally covered</p>
        </statement>
        <feedback>
          <p>Correct! July and December are equally covered i.e. 2 days.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_20_3">
    <statement>
      <p>Q-9: What is the dictionary that should be created for the text: this is this was</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>{'':'this', 'this':'is', 'is':'this', 'this':'was'}</p>
        </statement>
        <feedback>
          <p>Incorrect! Keys in a dictionary must be unique.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>{'':['this'], 'this':['is', 'was'], 'is':['this']}</p>
        </statement>
        <feedback>
          <p>Correct! 'this' is followed by either of 'is' and 'was' and 'is' could be followed by a 'this'.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{'':['this'], 'this':['is', 'was'], 'is':['was']}</p>
        </statement>
        <feedback>
          <p>Incorrect! 'this' is followed by either of 'is' and 'was' but 'is' cannot be followed by a 'was'.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{'':'this', 'this':'is', 'is':'this'}</p>
        </statement>
        <feedback>
          <p>Incorrect! No 'was' in this dictionary.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_20_4">
    <statement>
      <p>Q-10: What is the dictionary that should be created for the text: this is was this</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>{'':'this', 'this':'is', 'is':'was', 'was':'this'}</p>
        </statement>
        <feedback>
          <p>Incorrect! It's better to use a list for the words (values) which can follow a particular word (keys)</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{'':['this'], 'this':['is', 'was'], 'is':['was']}</p>
        </statement>
        <feedback>
          <p>Incorrect! 'this' is not immediately followed by 'was'</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>{'':['this'], 'this':['is'], 'is':['was'], 'was':['this']}</p>
        </statement>
        <feedback>
          <p>Correct! 'this' is be followed by 'is' which is then followed by 'was' which is then finally followed by 'this'.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>{'':['this'], 'is':['was'], 'was':['this']}</p>
        </statement>
        <feedback>
          <p>Incorrect! No 'this' key in this dictionary.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
