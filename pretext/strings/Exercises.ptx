<?xml version="1.0"?>
<exercises xml:id="strings_multiple-choice-questions">
  <title>Multiple Choice Questions</title>
  <exercise label="str-ex-mc-index">
    <statement>
      <p>11-9-1: What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python rocks"
print(s[1] * s.index("n"))
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>yyyyy</p>
        </statement>
        <feedback>
          <p>Correct! s[1] = y and the index of n is 5, so y * 5 prints 5 y characters.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>55555</p>
        </statement>
        <feedback>
          <p>Incorrect! s.index("n") = 5, but it is multiplying something else. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>y5</p>
        </statement>
        <feedback>
          <p>Incorrect! The print statement contains multiplication. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>TypeError</p>
        </statement>
        <feedback>
          <p>Incorrect! Multiplying a string by an int is allowed. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-red">
    <statement>
      <p>11-9-2: What will be printed when the following executes?</p>
      <pre>str = "His shirt is red"
pos = str.find("is")
print(pos)</pre>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>1</p>
        </statement>
        <feedback>
          <p>Correct! The find function returns the index of the first position that contains the given string.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>9</p>
        </statement>
        <feedback>
          <p>Incorrect! The find function returns the index of the FIRST position that contains the given string. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>2</p>
        </statement>
        <feedback>
          <p>Incorrect! Remember, indices start at 0, not 1. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>pos</p>
        </statement>
        <feedback>
          <p>Incorrect! pos is a variable, so print will print its value. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-end">
    <statement>
      <p>11-9-3: What will be printed when the following executes?</p>
      <pre>str = "This is fun"
str = str[5]
print(str)</pre>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>i</p>
        </statement>
        <feedback>
          <p>Correct! This will print the character at position 5 in the string, which is i.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>' '</p>
        </statement>
        <feedback>
          <p>Incorrect! Remember, indices start at 0. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>is fun</p>
        </statement>
        <feedback>
          <p>Incorrect! str[5] equals one specific character of the larger string. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>This is fun</p>
        </statement>
        <feedback>
          <p>Incorrect! Line 2 permanently changes the value that the variable str is assigned to. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-hey">
    <statement>
      <p>11-9-4: What is the value of s1 after the following code executes?</p>
      <pre>s1 = "heY"
s1 = s1.capitalize()
s1.lower()</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>heY</p>
        </statement>
        <feedback>
          <p>Incorrect! Although strings are immutable, s1 gets reassigned to a different value than it begins with. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>hey</p>
        </statement>
        <feedback>
          <p>Incorrect! Strings are immutable, so line 3 just returns a new string and doesn't modify the original. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>HEY</p>
        </statement>
        <feedback>
          <p>Incorrect! The capitalize method doesn't capitalize the entire word. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Hey</p>
        </statement>
        <feedback>
          <p>Correct! The capitalize method capitalizes the first letter of the word and lowercases the rest. Then, line 3 returns a new string without modifying the original.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-name">
    <statement>
      <p>11-9-5: What would the following code print?</p>
      <pre>Mali = 5
print("Mali" + " is " + str(Mali))</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Mali is Mali</p>
        </statement>
        <feedback>
          <p>Incorrect! There are no quotes around the last Mali, so str() will use the value of the variable Mali. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Mali is 5</p>
        </statement>
        <feedback>
          <p>Correct! The first Mali is in quotes, so it will print the string "Mali". The second Mali is not in quotes, so it will print the value of the variable Mali.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>5 is Mali</p>
        </statement>
        <feedback>
          <p>Incorrect! The first Mali is in quotes and the second is not. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>5 is 5</p>
        </statement>
        <feedback>
          <p>Incorrect! The first Mali is in quotes, so it is a string, not a variable. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-print">
    <statement>
      <p>11-9-6: What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python rocks"
print(s[3])
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>t</p>
        </statement>
        <feedback>
          <p>Incorrect! Indices start at 0, not 1. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>h</p>
        </statement>
        <feedback>
          <p>Correct! Indices start with 0.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>c</p>
        </statement>
        <feedback>
          <p>Incorrect! s[-3] would count from right to left and return c. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error, you cannot use the [ ] operator with a string.</p>
        </statement>
        <feedback>
          <p>Incorrect! [ ] is the index operator and works with strings. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-add">
    <statement>
      <p>11-9-7: What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python is awesome"
print(s[2] + s[-5])
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>te</p>
        </statement>
        <feedback>
          <p>Correct! The indexing operator has precedence over concatenation.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>tw</p>
        </statement>
        <feedback>
          <p>Incorrect! s[-1] is the last character of the string, so what is s[-5]? Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>o</p>
        </statement>
        <feedback>
          <p>Incorrect! The indexing operator happens before the two strings are concatenated. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error, you cannot use the [ ] operator with the + operator.</p>
        </statement>
        <feedback>
          <p>Incorrect! [ ] operator returns a string that can be concatenated with another string. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-len">
    <statement>
      <p>11-9-8: What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python rocks"
print(len(s))
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>11</p>
        </statement>
        <feedback>
          <p>Incorrect! The space counts as a character. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>12</p>
        </statement>
        <feedback>
          <p>Correct! len() returns the number of characters in the string, including spaces.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>1</p>
        </statement>
        <feedback>
          <p>Incorrect! s is a variable, not a character. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error, missing quotes around s</p>
        </statement>
        <feedback>
          <p>Incorrect! Because s is the name of a string variable, len() can be used on it. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-rose">
    <statement>
      <p>11-9-9: What is printed by the following statements:</p>
      <program language="python">
        <input>
s = "Rose"
s[1] = "i"
print(s)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Rose</p>
        </statement>
        <feedback>
          <p>Incorrect! Assignment is not allowed with strings. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Rise</p>
        </statement>
        <feedback>
          <p>Incorrect! Assignment is not allowed with strings. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>s</p>
        </statement>
        <feedback>
          <p>Incorrect! Assignment is not allowed with strings. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>TypeError</p>
        </statement>
        <feedback>
          <p>Correct! Strings are immutable, so you cannot change an existing string.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-ball">
    <statement>
      <p>11-9-10: What is printed by the following statements:</p>
      <program language="python">
        <input>
s = "ball"
r = ""
for item in s:
    r = item.upper() + r
print(r)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Ball</p>
        </statement>
        <feedback>
          <p>Incorrect! Each item is converted to upper case before concatenation. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>BALL</p>
        </statement>
        <feedback>
          <p>Incorrect! Pay close attention to the order the characters will be in. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>LLAB</p>
        </statement>
        <feedback>
          <p>Correct! The order is reversed due to the order of the concatenation.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>TypeError</p>
        </statement>
        <feedback>
          <p>Incorrect! String concatenation is allowed. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-rock">
    <statement>
      <p>11-9-11: What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python rocks"
print(s[7:11] * 3)
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>rockrockrock</p>
        </statement>
        <feedback>
          <p>Correct! s[7:11] = "rock", which is then repeated 3 times.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>rock rock rock</p>
        </statement>
        <feedback>
          <p>Incorrect! s[7:11] is "rock", not " rock". Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>rocksrocksrocks</p>
        </statement>
        <feedback>
          <p>Incorrect! Slicing will not include the character at index 11, just the characters up to it. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>TypeError, you cannot use multiplication with slicing.</p>
        </statement>
        <feedback>
          <p>Incorrect! Multiplying a string by an int is okay. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-animal-no-space">
    <statement>
      <p>11-9-12: What is printed by the following statements?</p>
      <program language="python">
        <input>
animal = "dog"
print("animal" + animal)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>dogdog</p>
        </statement>
        <feedback>
          <p>It will print "animal" first.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>dog dog</p>
        </statement>
        <feedback>
          <p>There is no added space.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>animal dog</p>
        </statement>
        <feedback>
          <p>There is no added space.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>animaldog</p>
        </statement>
        <feedback>
          <p>Correct!  It will print the characters in the string followed by the value of the variable animal without any space between.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-ex-mc-animal-with-space-but-in-quotes">
    <statement>
      <p>11-9-13: What is printed by the following statements?</p>
      <program language="python">
        <input>
animal = "dog"
print("animal " + "animal")
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>animal animal</p>
        </statement>
        <feedback>
          <p>Since animal is in quotes it will print those exact letters.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>animalanimal</p>
        </statement>
        <feedback>
          <p>There is a space in the first string.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>animal dog</p>
        </statement>
        <feedback>
          <p>Notice that the second animal is also in quotes.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>animaldog</p>
        </statement>
        <feedback>
          <p>Notice that the second animal is also in quotes and there is a space after the first string.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</exercises>
