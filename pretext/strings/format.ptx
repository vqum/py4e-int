<?xml version="1.0"?>
<section xml:id="strings_format-operator">
  <title>Format operator</title>
<idx><h>Operator</h><h>Format</h></idx>
<idx><h>Format</h><h>Operator</h></idx>
<idx>Format String</idx>
<idx>Format Sequence</idx>
<idx>TypeError</idx>
  <p>The <em>format operator</em>, <c>%</c> allows us to
            construct strings, replacing parts of the strings with the data stored
            in variables. When applied to integers, <c>%</c> is the modulus
            operator. But when the first operand is a string, <c>%</c> is the
            format operator.</p>
  <exercise label="str-format-mc-operator">
    <statement>
      <p>11-9-1: The % operator is used for which purposes? Select all that apply.</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>division</p>
        </statement>
        <feedback>
          <p>Incorrect! The division operator is '/'. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>modulus (remainder)</p>
        </statement>
        <feedback>
          <p>Correct! % can be used to find the remainder.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>format</p>
        </statement>
        <feedback>
          <p>Correct! % can be used to specify how string is formatted.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>conversion</p>
        </statement>
        <feedback>
          <p>Incorrect! Conversion uses "int", "str", or other functions. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <p>The first operand is the <em>format string</em>, which contains
            one or more <em>format sequences</em> that specify how the
            second operand is formatted. The result is a string.</p>
  <p>For example, the format sequence <c>%d</c> means that the second operand
            should be formatted as an integer (<q>d</q> stands for <q>decimal</q>):</p>
  <program language="python">
    <input>
&gt;&gt;&gt;camels = 42
&gt;&gt;&gt;print('%d' % camels)
42
</input>
  </program>
  <p>The result is the string <q>42</q>, which is not to be confused with the
            integer value 42.</p>
  <p>A format sequence can appear anywhere in the string, so you can embed a
            value in a sentence:</p>
  <program xml:id="str-formatSent" interactive="activecode" language="python">
    <input>
camels = 42
print('I have spotted %d camels.' % camels)
        </input>
  </program>
  <p>If there is more than one format sequence in the string, the second
            argument has to be a tuple [A tuple is a sequence of comma-separated
            values inside a pair of parentheses. We will cover tuples in Chapter 10].
            Each format sequence is matched with an element of the tuple, in order.</p>
  <p>The following example uses <c>%d</c> to format an integer, <c>%g</c> to format
            a floating-point number (don't ask why), and <c>%s</c> to format a string:</p>
  <program xml:id="str-formatMult" interactive="activecode" language="python">
    <input>
camels = 42
print('In %d years I have spotted %g %s.' % (3, 0.1, 'camels'))
        </input>
  </program>
  <p>The number of elements in the tuple must match the number of format
            sequences in the string. The types of the elements also must match the
            format sequences:</p>
  <program language="python">
    <input>
&gt;&gt;&gt; '%d %d %d' % (1, 2)
TypeError: not enough arguments for format string
&gt;&gt;&gt; '%d' % 'dollars'
TypeError: %d format: a number is required, not str
</input>
  </program>
  <p>In the first example, there aren't enough elements; in the second, the
            element is the wrong type.</p>
  <p>The format operator is powerful, but it can be difficult to use. You can
            read more about it at</p>
  <p><url href="https://docs.python.org/library/stdtypes.html#printf-style-string-formatting" visual="https://docs.python.org/library/stdtypes.html#printf-style-string-formatting">https://docs.python.org/library/stdtypes.html#printf-style-string-formatting</url>.</p>
  <exercise label="str-format-mc-d">
    <statement>
      <p>11-9-4: What does the %d operator format?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>string</p>
        </statement>
        <feedback>
          <p>Incorrect! %s formats strings. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>integer</p>
        </statement>
        <feedback>
          <p>Correct! %d formats integers.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>float</p>
        </statement>
        <feedback>
          <p>Incorrect! %g formats floating point numbers. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-format-mc-g">
    <statement>
      <p>11-9-5: What does the %g operator format?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>string</p>
        </statement>
        <feedback>
          <p>Incorrect! %s formats strings. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>integer</p>
        </statement>
        <feedback>
          <p>Incorrect! %d formats integers. Try again.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>float</p>
        </statement>
        <feedback>
          <p>Correct! %g formats floating point numbers.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="str-format-mc-s">
    <statement>
      <p>11-9-6: What does the %s operator format?</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>string</p>
        </statement>
        <feedback>
          <p>Correct! %s formats strings.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>integer</p>
        </statement>
        <feedback>
          <p>Incorrect! %d formats integers. Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>float</p>
        </statement>
        <feedback>
          <p>Incorrect! %g formats floating point numbers. Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
