<?xml version="1.0"?>
<section xml:id="tuples_peer-instruction-tuples-multiple-choice-questions">
  <title>Peer Instruction: Tuples Multiple Choice Questions</title>
  <exercise label="dz-lecture_16_4">
    <statement>
      <p>11-9-1: In what situation does the below code fail?</p>
      <pre>def find(lst, value):
   '''(list, value) -&gt; int
   Return the first occurrence of value in lst.
   If value is not found, return -1.
   &gt;&gt;&gt; find([20, 40, 60], 40)
   1
   '''
   i = 0
   num = lst[i]
   while num != value:
      i = i + 1
      num = lst[i]
   if i &lt; len(lst):
      return i
   else: return -1</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>It never fails</p>
        </statement>
        <feedback>
          <p>Incorrect! Because 'num = lst[i]' goes out of range when the list is empty or the value is not found in the list</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It fails when the list is empty</p>
        </statement>
        <feedback>
          <p>Incorrect! Because 'num = lst[i]' goes out of range when the list is empty or the value is not found in the list</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It fails when the value is not found in the list</p>
        </statement>
        <feedback>
          <p>Incorrect! Because 'num = lst[i]' goes out of range when the list is empty or the value is not found in the list</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Both B and C will fail</p>
        </statement>
        <feedback>
          <p>Correct! Because 'num = lst[i]' goes out of range when the list is empty or the value is not found in the list</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="dz-lecture_16_6">
    <statement>
      <p>11-9-2: To represent groups of students, we can use a nested list. For example, in the following list, students 1, 3, and 4 are together in a group, and student 2 is working alone: [[1, 3, 4], [2]]. In the following code, which call would return True?</p>
      <pre>def is_ok(group_list, class_list):
   '''(list of list of int, list of int) -&gt; bool
   Return True iff every student in class_list is in exactly
   one group according to group_list.
   '''</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>is_ok([[1, 2], [2, 3]], [1, 2, 3])</p>
        </statement>
        <feedback>
          <p>Incorrect! Because 2 is in two different groups- [1, 2] and [2, 3]</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>is_ok([[1, 2], [4]], [1, 2, 3])</p>
        </statement>
        <feedback>
          <p>Incorrect! Because 3 is not in the group_list and 4 is not the class_list</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>is_ok([], [1, 2, 3])</p>
        </statement>
        <feedback>
          <p>Incorrect! Because there's no group list at all</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>is_ok([[1, 2], [4]], [1, 2, 3, 4])</p>
        </statement>
        <feedback>
          <p>Incorrect! Because 3 has not be assigned to any group</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>None will return True</p>
        </statement>
        <feedback>
          <p>Correct! Because there's no option where the group list has assigned every student to exactly one group</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
